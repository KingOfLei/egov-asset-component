package com.bosssoft.egov.asset.lifecycle.service.impl;

/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Tue Dec 26 11:29:13 CST 2017
 */

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.asset.lifecycle.entity.AssetLifeLog;
import com.bosssoft.egov.asset.lifecycle.mapper.AssetLifeLogMapper;
import com.bosssoft.egov.asset.lifecycle.service.AssetLifeLogService;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;
import com.bosssoft.platform.runtime.exception.BusinessException;

/**
 * 类说明: AssetLifeLogService接口实现类.
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017-12-26   Wiesel　　　新建
 * </pre>
 */
@Service
public class AssetLifeLogServiceImpl implements AssetLifeLogService {

	private static Logger logger = LoggerFactory.getLogger(AssetLifeLogServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private AssetLifeLogMapper assetLifeLogMapper;

	/**
	 *
	 * @param assetLifeLog
	 */
	public void addAssetLifeLog(AssetLifeLog assetLifeLog) {
		assetLifeLogMapper.insert(assetLifeLog);
	}

//	/**
//	 *
//	 * @param assetLifeLog
//	 */
//	public void delAssetLifeLog(AssetLifeLog assetLifeLog) {
//		int i = assetLifeLogMapper.delAssetLifeLog(assetLifeLog);
//		if (i > 1) {
//              throw new BusinessException("errorAssetLifeLog","删除语句有误！");
//		}
//	}

	/**
	 *
	 * @param assetLifeLog
	 */
	public void updateAssetLifeLog(AssetLifeLog assetLifeLog) {
		assetLifeLogMapper.updateByPrimaryKey(assetLifeLog);
	}

	/**
	 *
	 * @param assetLifeLog
	 * @retrun
	 */
	public List<AssetLifeLog> getAssetLifeLogList(AssetLifeLog assetLifeLog) {
		return null;
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<AssetLifeLog> queryAssetLifeLogPage(Searcher searcher, Page<AssetLifeLog> page) {
		return assetLifeLogMapper.queryAssetLifeLogPage(searcher, page);
	}

	@Override
	public AssetLifeLog getAssetLifeLog(Long id) {
		return assetLifeLogMapper.selectByPrimaryKey(id);
	}

}