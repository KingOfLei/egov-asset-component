
/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Sat Jan 07 11:43:10 CST 2017
 */
package com.bosssoft.egov.asset.assettype.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.asset.assettype.api.AssetOftenTypeAndClassifyManager;
import com.bosssoft.egov.asset.assettype.entity.AssetClassifyOften;
import com.bosssoft.egov.asset.assettype.entity.AssetDictAssetTypeOften;
import com.bosssoft.egov.asset.assettype.entity.AssetDictClassify;
import com.bosssoft.egov.asset.assettype.mapper.AssetClassifyOftenMapper;
import com.bosssoft.egov.asset.assettype.mapper.AssetDictAssetTypeOftenMapper;
import com.bosssoft.egov.asset.assettype.mapper.AssetDictClassifyMapper;
import com.bosssoft.egov.asset.common.util.BeanUtilsExt;
import com.bosssoft.egov.asset.runtime.User;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.persistence.entity.Condition;
import com.bosssoft.platform.common.lang.data.Searcher;


/**
 * 类说明: AssetDictAssetTypeOftenService接口实现类. 
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017-01-07   Administrator　　　新建
 * </pre>
 */
@Service
public class AssetDictAssetTypeOftenServiceImpl implements AssetDictAssetTypeOftenService {

	private static Logger logger = LoggerFactory.getLogger(AssetDictAssetTypeOftenServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private AssetDictAssetTypeOftenMapper assetDictAssetTypeOftenMapper;
	
	@Autowired
	private AssetClassifyOftenMapper classifyOftenMapper;
	
	@Autowired
	private AssetDictClassifyMapper classifyMapper;
		
	/**
	 *
	 * @param assetDictAssetTypeOften
	 */
	public void addAssetDictAssetTypeOften(AssetDictAssetTypeOften assetDictAssetTypeOften)  {
		assetDictAssetTypeOftenMapper.insert(assetDictAssetTypeOften);
	}

	/**
	 *
	 * @param assetDictAssetTypeOften
	 */
	public void delAssetDictAssetTypeOften(AssetDictAssetTypeOften assetDictAssetTypeOften)  {
		assetDictAssetTypeOftenMapper.deleteByPrimaryKey(assetDictAssetTypeOften);
	}

	/**
	 *
	 * @param assetDictAssetTypeOften
	 */
	public void updateAssetDictAssetTypeOften(AssetDictAssetTypeOften assetDictAssetTypeOften)  {
		assetDictAssetTypeOftenMapper.updateByPrimaryKey(assetDictAssetTypeOften);
	}

	/**
	 *
	 * @param assetDictAssetTypeOften
	 * @retrun
	 */
	public List<AssetDictAssetTypeOften> getAssetDictAssetTypeOftenList(AssetDictAssetTypeOften assetDictAssetTypeOften)  {
		return null;
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<AssetDictAssetTypeOften> queryAssetDictAssetTypeOftenPage(Searcher searcher, Page<AssetDictAssetTypeOften> page)  {
		return null;
	}

	@Override
	public void addOftenInfo(User user, String typeCode, String classifyCode) {
		//常用分类新增
		//0.根据分类获取类型 然后根据类型 获取对应表名
		//1.修改 资产类型表状态
		//2.删除已有分类
		//3.插入新增分类
		
		Condition condition = new Condition(AssetDictAssetTypeOften.class);
		condition.createCriteria().andEqualTo("orgId", user.getOrgLongId());
		int count = assetDictAssetTypeOftenMapper.selectCountByExample(condition);
		if(count == 0){
			//新增
			Condition cnd = new Condition(AssetDictAssetTypeOften.class);
            cnd.createCriteria().andCondition(" ORG_CODE = '-' ");
            List<AssetDictAssetTypeOften> types = assetDictAssetTypeOftenMapper.selectByExample(cnd);
            for(AssetDictAssetTypeOften type : types){
            	type.setRgnId(user.getRgnId());
            	type.setRgnCode(user.getRgnCode());
            	type.setRgnName(user.getRgnName());
            	type.setOrgId(user.getOrgLongId());
            	type.setOrgCode(user.getOrgCode());
            	type.setOrgName(user.getOrgName());
            	assetDictAssetTypeOftenMapper.insertSelective(type);
            }
		}
		//根据类型编码查找到其对应分类表名
		List<AssetDictAssetTypeOften> classifyOftens = assetDictAssetTypeOftenMapper.queryTypeRelateTable(user.getOrgLongId(), typeCode);
		if(classifyOftens == null || classifyOftens.isEmpty()) {
			//添加
			//新增
			Condition cnd = new Condition(AssetDictAssetTypeOften.class);
            cnd.createCriteria().andCondition(" ORG_CODE = '-' ")
            .andCondition(" ASSET_TYPE_CODE LIKE '" + typeCode + "%' ")
            .andCondition(" NOT EXISTS(SELECT 1 FROM ASSET_DICT_ASSET_TYPE_OFTEN O WHERE O.ORG_ID='" + user.getOrgLongId() + "' AND O.ASSET_TYPE_ID = ASSET_DICT_ASSET_TYPE_OFTEN.ASSET_TYPE_ID )");
            
            List<AssetDictAssetTypeOften> types = assetDictAssetTypeOftenMapper.selectByExample(cnd);
            for(AssetDictAssetTypeOften type : types){
            	type.setRgnId(user.getRgnId());
            	type.setRgnCode(user.getRgnCode());
            	type.setRgnName(user.getRgnName());
            	type.setOrgId(user.getOrgLongId());
            	type.setOrgCode(user.getOrgCode());
            	type.setOrgName(user.getOrgName());
            	assetDictAssetTypeOftenMapper.insertSelective(type);
            }
            classifyOftens = assetDictAssetTypeOftenMapper.queryTypeRelateTable(user.getOrgLongId(), typeCode);
			if(classifyOftens == null || classifyOftens.isEmpty()){
				return;
			}
            //return;
		}
		//常用分类表名
		String classifyTable = classifyOftens.get(0).getStr01();
		//全部分类表名 取数用
		String allClassifyTable = classifyOftens.get(0).getStr02();
		
		//删除已有分类
		StringBuffer sql = new StringBuffer();
		sql.append(" DELETE FROM ").append(classifyTable);
		sql.append(" WHERE ORG_ID = '").append(user.getOrgId()).append("' ");
		sql.append(" AND '" + classifyCode + "' like asset_classify_code ||'%' ");		
		classifyOftenMapper.deleteBySql(sql.toString());		
		//新增分类 从全部分类表中获取对应信息 对应表名STR02	
		sql.delete(0, sql.length());
		sql.append(" '" + classifyCode + "' like asset_classify_code ||'%' ");
		//获取分类
		List<AssetDictClassify> classifyList = classifyMapper.queryAssertClassifyBySql(allClassifyTable,sql.toString());
		for(AssetDictClassify classify : classifyList){
			//转换
			AssetClassifyOften oftenClassify = BeanUtilsExt.copyToNewBean(classify, AssetClassifyOften.class);			
			oftenClassify.setRgnId(user.getRgnId());
			oftenClassify.setRgnCode(user.getRgnCode());
			oftenClassify.setRgnName(user.getRgnName());
			oftenClassify.setOrgId(user.getOrgLongId());
			oftenClassify.setOrgCode(user.getOrgCode());
			oftenClassify.setOrgName(user.getOrgName());
			classifyOftenMapper.insertClassifyOftenSql(classifyTable,oftenClassify);
//			classifyOftenMapper.insertSelective(oftenClassify);
		}
		//更新类型状态
		condition.clear();
		condition.createCriteria().andEqualTo("orgId", user.getOrgLongId())
		.andCondition(" '" + typeCode + "' like ASSET_TYPE_CODE || '%'");
		AssetDictAssetTypeOften typeOften = new AssetDictAssetTypeOften();
		typeOften.setStatus("1");
		assetDictAssetTypeOftenMapper.updateByExampleSelective(typeOften, condition);
		//清空缓存
		AssetOftenTypeAndClassifyManager.getInstance().clearAllCache();
	}


}