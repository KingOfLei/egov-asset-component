
/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Wed Sep 13 00:05:25 CST 2017
 */
package com.bosssoft.asset.etl.service;

import java.util.List;
import com.bosssoft.asset.etl.entity.AssetEtlRuleConfig;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.bosssoft.asset.etl.service.AssetEtlRuleConfigService;
import com.bosssoft.asset.etl.mapper.AssetEtlRuleConfigMapper;


/**
 * 类说明: AssetEtlRuleConfigService接口实现类. 
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017-09-13   xiedeshou　　　新建
 * </pre>
 */
@Service
public class AssetEtlRuleConfigServiceImpl implements AssetEtlRuleConfigService {

	private static Logger logger = LoggerFactory.getLogger(AssetEtlRuleConfigServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private AssetEtlRuleConfigMapper assetEtlRuleConfigMapper;
	
	/**
	 *
	 * @param assetEtlRuleConfig
	 */
	public void addAssetEtlRuleConfig(AssetEtlRuleConfig assetEtlRuleConfig)  {
		assetEtlRuleConfigMapper.insert(assetEtlRuleConfig);
	}

	/**
	 *
	 * @param assetEtlRuleConfig
	 */
	public void delAssetEtlRuleConfig(AssetEtlRuleConfig assetEtlRuleConfig)  {
		assetEtlRuleConfigMapper.deleteByPrimaryKey(assetEtlRuleConfig);
	}

	/**
	 *
	 * @param assetEtlRuleConfig
	 */
	public void updateAssetEtlRuleConfig(AssetEtlRuleConfig assetEtlRuleConfig)  {
		assetEtlRuleConfigMapper.updateByPrimaryKey(assetEtlRuleConfig);
	}

	/**
	 *
	 * @param assetEtlRuleConfig
	 * @retrun
	 */
	public List<AssetEtlRuleConfig> getAssetEtlRuleConfigList(AssetEtlRuleConfig assetEtlRuleConfig)  {
		return assetEtlRuleConfigMapper.select(assetEtlRuleConfig);
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<AssetEtlRuleConfig> queryAssetEtlRuleConfigPage(Searcher searcher, Page<AssetEtlRuleConfig> page)  {
		return assetEtlRuleConfigMapper.queryAssetEtlRuleConfigPage(searcher, page);
	}

	@Override
	public boolean existsRuleConfigById(Long configId) {
		AssetEtlRuleConfig config = new AssetEtlRuleConfig();
		config.setId(configId);
		int count = assetEtlRuleConfigMapper.selectCount(config);
		return count>0;
	}


}