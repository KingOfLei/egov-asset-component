/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Thu Mar 09 01:48:15 CST 2017
 */
package com.bosssoft.egov.connect.controller;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.bosssoft.egov.asset.common.util.StringUtilsExt;
import com.bosssoft.egov.connect.entity.RecycleOrg;
import com.bosssoft.egov.connect.service.RecycleOrgService;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;
import com.bosssoft.platform.runtime.web.binding.annotation.AjaxResponseBody;
import com.bosssoft.platform.runtime.web.response.GridData;
import com.bosssoft.platform.runtime.web.response.PageResult;

@Controller
@RequestMapping(value="egov/connect/recycleorg",name="recycle_org")
public class RecycleOrgController {

	@Autowired
	private RecycleOrgService recycleOrgService;
	
	private static Logger logger = LoggerFactory.getLogger(RecycleOrgController.class);

  /**
     * 列表页面
	 */
    @RequestMapping(value = "showIndex.do",name="recycle_org入口页面")
    public String showIndex() {
        return "egov/connect/recycleorg/recycleorg_index.ui";
    }
    
     /**
     * 新增页面
	 */
    @RequestMapping(value = "showAdd.do",name="recycle_org新增页面")
    public String showAdd(Model model) {
        return "egov/connect/recycleorg/recycleorg_add.ui";
    }
    
    
    /**
     * <p>函数名称：doInsert        </p>
     * <p>功能说明：新增回收机构
     *
     * </p>
     *<p>参数说明：</p>
     * @param recycleOrg
     * @return
     *
     * @date   创建时间：2017年9月29日
     * @author 作者：黄振雄 (mailto:huangzhenxiong@bosssoft.com.cn)
     */
    @RequestMapping(value = "doInsert.do",name="recycle_org保存",method=RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> doInsert(RecycleOrg recycleOrg)  {
      	Map<String, Object> result = new HashMap<String, Object>();
      	String orgName = recycleOrg.getOrgName();
		if(!StringUtilsExt.isNotBlank(orgName)){
			orgName="";
		}
		//校验回收机构信息
		result = this.validate(recycleOrg);
		if(result.get("tag") == Boolean.TRUE){
			try{
	    		recycleOrgService.addRecycleOrg(recycleOrg);
	    		result.put("tag", true);
	    		result.put("msg", "回收机构【"+ orgName +"】新增成功！");
	    	}catch(Exception e){
	    		result.put("tag", false);
	    		result.put("msg", "回收机构新增失败！");
	    		logger.error("回收机构新增失败！" + e.getMessage());
	    	}
		}
      	return result;
    }
    
    /**
     * <p>函数名称：doUpdate        </p>
     * <p>功能说明：修改回收机构
     *
     * </p>
     *<p>参数说明：</p>
     * @param recycleOrg
     * @return
     *
     * @date   创建时间：2017年9月30日
     * @author 作者：黄振雄 (mailto:huangzhenxiong@bosssoft.com.cn)
     */
    @RequestMapping(value = "doUpdate.do",name="recycle_org修改", method = RequestMethod.POST)
    @ResponseBody
    public Map<String, Object> doUpdate(RecycleOrg recycleOrg)  {
		Map<String, Object> result = new HashMap<String, Object>();
		String orgName = recycleOrg.getOrgName();
		if(!StringUtilsExt.isNotBlank(orgName)){
			orgName="";
		}
		result = this.validate(recycleOrg);
		if(result.get("tag") == Boolean.TRUE){
			try{
	    		recycleOrgService.updateRecycleOrg(recycleOrg);
	    		result.put("tag", true);
	    		result.put("msg", "回收机构【"+ orgName +"】修改成功！");
	    	}catch(Exception e){
	    		result.put("tag", false);
	    		result.put("msg", "回收机构【"+ orgName +"】修改失败！");
	    		logger.error("回收机构修改失败！" + e.getMessage());
	    	}
		}
		return result;
    }
    
	 /**
	 * <p>函数名称：doDelete        </p>
	 * <p>功能说明：删除回收机构
	 *
	 * </p>
	 *<p>参数说明：</p>
	 * @param recycleOrg
	 * @return
	 *
	 * @date   创建时间：2017年9月30日
	 * @author 作者：黄振雄 (mailto:huangzhenxiong@bosssoft.com.cn)
	 */
	 @RequestMapping(value = "doDelete.do",name="recycle_org删除" ,method = RequestMethod.POST)
	 @ResponseBody
	 public Map<String, Object> doDelete(RecycleOrg recycleOrg)  {
		Map<String, Object> result = new HashMap<String, Object>();
		String orgName = recycleOrg.getOrgName();
		if(!StringUtilsExt.isNotBlank(orgName)){
			orgName="";
		}
		try{
			recycleOrgService.delRecycleOrg(recycleOrg);
			result.put("tag", true);
			result.put("msg", "回收机构【"+ orgName +"】删除成功！");
		}catch(Exception e){
			result.put("tag", false);
	    	result.put("msg", "回收机构【"+ orgName +"】删除失败！");
	    	logger.error("回收机构删除失败！" + e.getMessage());
		}
		return result;
	 }
	 
	 /**
	 * <p>函数名称：validate        </p>
	 * <p>功能说明：校验回收机构信息
	 *
	 * </p>
	 *<p>参数说明：</p>
	 * @param recycleOrg
	 * @return
	 *
	 * @date   创建时间：2017年9月30日
	 * @author 作者：黄振雄 (mailto:huangzhenxiong@bosssoft.com.cn)
	 */
	private Map<String, Object> validate(RecycleOrg recycleOrg){
		 Map<String, Object> result = new HashMap<String,Object>();
		 //暂时： 每种回收类型只能有一个回收机构 需要校验
		 
		 //判断单位编码是否存在
		 RecycleOrg queryOrg = new RecycleOrg();
		 String orgCode = recycleOrg.getOrgCode();
		 Long id = recycleOrg.getId();
		 if(StringUtilsExt.isNotBlank(orgCode)){
			 queryOrg.setOrgCode(orgCode);
			 List<RecycleOrg> orgs = recycleOrgService.getRecycleOrgList(queryOrg);
			 if(orgs != null && orgs.size() > 0){
				 //需要比较id
				 Long queryId = orgs.get(0).getId();
				 //
				 if(id == null){
					 result.put("tag", false);
					 result.put("msg", "编码【"+ orgCode +"】已存在！");
					 return result;
				 }else if(!id.toString().equals(queryId.toString())){
					 result.put("tag", false);
					 result.put("msg", "编码【"+ orgCode +"】已存在！");
					 return result;
				 }
			 }
		 }
		 
		 String beginDate = recycleOrg.getBeginDate();
		 String endDate = recycleOrg.getEndDate();
		 if(StringUtilsExt.isNotBlank(beginDate) && StringUtilsExt.isNotBlank(endDate)){
			 if(beginDate.compareTo(endDate) > 0){
				 result.put("tag", false);
				 result.put("msg", "合同开始日期不能大于合同结束日期！");
			 }else{
				 result.put("tag", true);
				 result.put("msg", "校验通过！");
			 }
		 }else{
			 result.put("tag", true);
			 result.put("msg", "校验通过！");
		 }
		 return result;
	 }
	   /**
     * 获取单条记录
     * @param  recycleOrg 条件
	 */
	 @RequestMapping(value=" getRecycleOrg")
	 @AjaxResponseBody
	 public RecycleOrg getRecycleOrg(RecycleOrg recycleOrg) {
		return null;
	}
	 
	  /**
     * 获取列表
     * @param  recycleOrg 条件
	 */
	 @RequestMapping(value=" getRecycleOrgList",name="recycle_org查询列表")
	 @AjaxResponseBody
	 public List<RecycleOrg> getRecycleOrgList(RecycleOrg recycleOrg) {
		return null;
	}
	 /**
     * 获取分页
     * @param searcher 查询条件
     * @param page 分页信息
	 */
	 @RequestMapping(value="queryRecycleOrgPage.do",name="recycle_org分页查询")
	 @AjaxResponseBody
	 public  GridData queryRecycleOrgPage(Searcher searcher, Page<RecycleOrg> page) {
		return new GridData(new PageResult<RecycleOrg>(recycleOrgService.queryRecycleOrgPage(searcher, page)));
	}
}