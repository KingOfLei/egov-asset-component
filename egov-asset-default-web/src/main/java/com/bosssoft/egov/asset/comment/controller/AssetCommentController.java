/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Tue May 23 14:51:49 CST 2017
 */
package com.bosssoft.egov.asset.comment.controller;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.bosssoft.egov.aims.utils.ResultUtils;
import com.bosssoft.egov.asset.activiti.entity.AssetProcessRemark;
import com.bosssoft.egov.asset.activiti.service.AssetProcessRemarkService;
import com.bosssoft.egov.asset.basic.BaseController;
import com.bosssoft.egov.asset.common.idgenerator.ComponetIdGen;
import com.bosssoft.egov.asset.common.util.MapUtilsExt;
import com.bosssoft.egov.asset.entity.AssetComment;
import com.bosssoft.egov.asset.runtime.User;
import com.bosssoft.egov.asset.service.AssetCommentService;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;
import com.bosssoft.platform.runtime.web.binding.annotation.AjaxResponseBody;
import com.bosssoft.platform.runtime.web.context.WebApplicationContext;
import com.bosssoft.platform.runtime.web.response.AjaxResult;
import com.bosssoft.platform.runtime.web.response.GridData;
import com.bosssoft.platform.runtime.web.response.PageResult;
import com.bosssoft.platform.ui.tags.UIConst;

@Controller
@RequestMapping(value="egov/asset/comment/",name="常用意见")
public class AssetCommentController extends BaseController{

	@Autowired
	private AssetCommentService assetCommentService;
	
	@Autowired
	private AssetProcessRemarkService remarkService;

  /**
     * 列表页面
	 */
    @RequestMapping(value = "showIndex.do",name="常用意见入口页面")
    public String showIndex() {
        return "egov/asset/comment/assetcomment/assetcomment_index.ui";
    }
    
     /**
     * 新增页面
	 */
    @RequestMapping(value = "showAdd.do",name="常用意见新增页面")
    public String showAdd(Model model) {
    	Map<String,Object> params = WebApplicationContext.getContext().getWebRequestContext().getRequestParamsMap();
		Map<String,Object> data = new HashMap<String,Object>();		 
		data.put("params", MapUtilsExt.copyNewMap(params));
    	model.addAttribute(UIConst.UIPAGEMODEL,data);
        return "egov/asset/comment/assetcomment/assetcomment_add.ui";
    }
    
   /**
     * 新增
     * @param assetComment 新增信息
	 */
    @RequestMapping(value = "doInsert.do",name="常用意见保存",method=RequestMethod.POST)
    @AjaxResponseBody
    public AjaxResult doInsert(AssetComment assetComment)  {
    	//新增
    	User user = getCurrUser();
    	assetComment.setId(ComponetIdGen.newWKID());
    	assetComment.setRgnId(user.getRgnId());
    	assetComment.setRgnCode(user.getRgnCode());
    	assetComment.setRgnName(user.getRgnName());
    	assetComment.setOrgId(user.getOrgLongId());
    	assetComment.setOrgCode(user.getOrgCode());
    	assetComment.setOrgName(user.getOrgName());
    	assetComment.setUserId(user.getUserId());
    	assetComment.setUserCode(user.getUserCode());
    	assetComment.setUserName(user.getUserName());
    	assetComment.setStatus(1);
      	assetCommentService.addAssetComment(assetComment);
      	return ResultUtils.SUCCESS("新增成功", getAssetCommentList(assetComment));
    }
    
   /**
     * 修改
     * @param assetComment 修改信息
	 */
    @RequestMapping(value = "doUpdate.do",name="常用意见修改", method = RequestMethod.POST)
    @AjaxResponseBody
    public AjaxResult doUpdate(AssetComment assetComment)  {
		assetCommentService.updateAssetComment(assetComment);
		return ResultUtils.SUCCESS("更新成功",assetComment);
    }
    
 /**
     * 删除
     * @param assetComment 删除条件
	 */
	 @RequestMapping(value = "doDelete.do",name="常用意见删除" ,method = RequestMethod.POST)
	 @AjaxResponseBody
	 public AjaxResult doDelete(AssetComment assetComment)  {
		assetCommentService.delAssetComment(assetComment);		
		return ResultUtils.SUCCESS("删除成功",getAssetCommentList(assetComment));
	 }
	   /**
     * 获取单条记录
     * @param  assetComment 条件
	 */
	 @RequestMapping(value="getAssetComment.do")
	 @AjaxResponseBody
	 public AssetComment getAssetComment(AssetComment assetComment) {
		return assetCommentService.getAssetComment(assetComment);
	}
	 
	  /**
     * 获取列表
     * @param  assetComment 条件
	 */
	 @RequestMapping(value="getAssetCommentList.do",name="常用意见查询列表")
	 @AjaxResponseBody
	 public List<AssetComment> getAssetCommentList(AssetComment assetComment) {
		assetComment.setUserCode(getCurrUser().getUserCode());
		List<AssetComment> list = assetCommentService.getAssetCommentList(assetComment); 
		return (list == null || list.isEmpty()) ? getDefaultComment() : list;
	 }
	 
	 private List<AssetComment> getDefaultComment(){
		 List<AssetComment> list = new ArrayList<AssetComment>();
		 User user = getCurrUser();
    	 String[] defaultComment = {"同意","不同意"};
		 for(String comment : defaultComment){
			 AssetComment assetComment = new AssetComment();
			 assetComment.setId(ComponetIdGen.newWKID());
	    	 assetComment.setRgnId(user.getRgnId());
	    	 assetComment.setRgnCode(user.getRgnCode());
	    	 assetComment.setRgnName(user.getRgnName());
	    	 assetComment.setOrgId(user.getOrgLongId());
	    	 assetComment.setOrgCode(user.getOrgCode());
	    	 assetComment.setOrgName(user.getOrgName());
	    	 assetComment.setUserId(user.getUserId());
	    	 assetComment.setUserCode(user.getUserCode());
	    	 assetComment.setUserName(user.getUserName());
	    	 assetComment.setContent(comment);
	    	 assetComment.setStatus(1);
	    	 list.add(assetComment);
    	 }		
		 assetCommentService.addComment(list);
		 return list;
	 }
	 /**
     * 获取分页
     * @param searcher 查询条件
     * @param page 分页信息
	 */
	 @RequestMapping(value="queryAssetCommentPage.do",name="常用意见分页查询")
	 @AjaxResponseBody
	 public  GridData queryAssetCommentPage(Searcher searcher, Page<AssetComment> page) {
		
		 return new GridData(new PageResult<AssetComment>(assetCommentService.queryAssetCommentPage(searcher, page)));
	}
	 
	 @RequestMapping(value="queryBizCommentList.do",name="根据业务id获取审核已经列表")
	 @AjaxResponseBody
	 public List<AssetProcessRemark> queryBizCommentList(String bizId){
		 return remarkService.queryListByBusId(bizId);
	 }
}