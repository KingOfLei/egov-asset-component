/**
 * * Auto generated by Bossssoft Studio version 1.0 beta Sun Sep 18 11:45:38 CST
 * 2016
 */
// define(['引入外部js模块或控件'],function('引入外部js或控件的别名'){})
define([ "app/widgets/window/app-dialog", "app/app-pagebase",
         "resources/egov/js/common/utils/StatusUtils","resources/egov/js/common/utils/utils.js",
         "resources/egov/js/asset/amcuser/amcuser_util.js",
         "resources/egov/js/asset/comment/assetcomment/assetcomment_add.js",
         "resources/egov/js/asset/aims/activity/activity_add.js"],function(Dialog, PageBase,$status,
        		 utils, $utils,$assetComment,acdlg) {
			var AmcUserModel = PageBase.extend({
						// 类初始化
						initialize : function() {
							AmcUserModel.superclass.initialize.call(this);
						},
						ACTION : {
							ADD : "ADD",
							EDIT : "EDIT",
							VIEW : "VIEW",
							AUDIT: "AUDIT",
							ONLY_ADD: "ONLY_ADD",
							ONLY_EDIT: "ONLY_EDIT"
						},
						// 当前窗口状态
						indexAction : null,
						// 控件监听事件 格式：#控件id#:{事件名:事件方法}
						//
						BEFORE_DATA:null,
						listeners : {
							//直接主管下拉树 选择后事件
							majorUserCode:{
								afterSelected:function(val){
									$A("#majorUserCode").comboztree("setValue", val.orgCode);
									$A("#majorUserCode").comboztree("setText", val.orgName);
									$A("#majorUserName").textbox("setValue", val.orgName);
								}
							},
							
							userCode : {
								onBlur : function() {
									var url = "egov/asset/amcuser/validateUserCode.do";
									var self = AmcUserModel.getInstance();
									$.ajax({
										url : url,
										data : $A("#userCode"),
										success : function(data) {
										if (data != 0) {// 不唯一清空数据
											$a.messager.error("用户账号已存在！");
										} 
									}
								})
								}
							},
							
							amcSubPosPanel_subPosByUser : {
								beforeBeginEdit : function(rowData, rowIndex) {
									var self = AmcUserModel.getInstance();
									if (rowData.positionId != null&& rowData.positionId != undefined&& rowData.positionId != "") {
										return false;
									}
								},
								
								onClickCell : function(rowData, rowIndex, field) {
									var self = AmcUserModel.getInstance();
									if(field == "ruleValueCode"){
										var ed = $('#amcSubPosPanel_subPosByUser').grid('getEditor', field);
										$(ed).comboztree('reload','egov/asset/aims/basic/aimsbasicorg/loadAllOrgList.do');
										var pd = $('#amcSubPosPanel_subPosByUser').grid('getEditor',"roleCode");
										$(pd).combobox('reload','egov/asset/amcuser/querySubPosList.do');	
									}
									if(field == "roleCode"){
										var pd = $('#amcSubPosPanel_subPosByUser').grid('getEditor',"roleCode");
										$(pd).combobox('reload','egov/asset/amcuser/querySubPosList.do');
										var ed = $('#amcSubPosPanel_subPosByUser').grid('getEditor', "ruleValueCode");
										$(ed).comboztree('reload','egov/asset/aims/basic/aimsbasicorg/loadAllOrgList.do');
									}
								}
							}
						},
						
						//按钮调用方法
						/*  1.不需要走审核流程的按钮事件 */
						amcuser_saveBtn:function(){
							var self = AmcUserModel.getInstance();
							//校验附件
							self.attachVerify({'afaUser':self.BEFORE_DATA.afaUser,'flowTabs':self.FlowTabs},function(){
								//保存
								self.doSave({isSave: true});
							});
						},
						
						/*  2.需要走审核流程的按钮事件  begin */
						//暂存
						amcuser_tempSaveBtn:function(){
							var self = AmcUserModel.getInstance();
							self.doSave({isTempSave: true});
						},
						//提交
						amcuser_commitBtn:function(){
							var self = AmcUserModel.getInstance();
							//校验附件
							self.attachVerify({'afaUser':self.BEFORE_DATA.afaUser,'flowTabs':self.FlowTabs},function(){
								//提交
								self.doSave({isCommit: true});
							});
						},
						
						//审核
						amcuser_checkBtn:function(){
							$A.assetMsg.confirm("确认审核吗？", {
								  ok:function(){
									  var self = AmcUserModel.getInstance();
									  AmcUserModel.getInstance().doAuditSave({isCheckPass:true});
								  }
							  });
						},
						//退回
						amcuser_backBtn:function(){
							$A.assetMsg.confirm("确认退回吗？", {
								  ok:function(){
									  var self = AmcUserModel.getInstance();
									  AmcUserModel.getInstance().doAuditSave({isBack:true});
								  }
							  });
						},
						//意见
						amcuser_commentBtn:function(){
							var _self  = AmcUserModel.getInstance();
				            var userCode = _self.BEFORE_DATA.afaUser.userCode;
				            var curEditStatus = _self.BEFORE_DATA.curEditStatus;
				            var action= $assetComment.ACTION.VIEW;
				            if(_self.ACTION.AUDIT == curEditStatus){
				            	action= $assetComment.ACTION.ADD;
				            }
				        	$assetComment.showCommentPage({bizId:userCode,action:action},function(content){
				        		$("#auditComment").textbox("setValue",content);
				        	 })
						},
						//流转状态
						amcuser_flowBtn:function(){
							 var self = AmcUserModel.getInstance();
							 var userCode = $A("#userCode").textbox("getValue");
							 var userName = $A("#userName").textbox("getValue");
							 var params = {"auditType":acdlg.AUDIT_TYPE.USER_MANAGE_AUDIT,"businessId":userCode,"data":{
								 userCode:userCode,
								 userName:userName
							 }};
								$.flowSearch(params);
						},
						//流程帮助
						amcuser_flowHelpBtn:function(){
							$.flowHelp("USER_MANAGE");
						},
						/*  2.需要走审核流程的按钮事件  end */
						
						/*  1.走审核流程(包括暂存和提交)和 不走审核流程(包括新增和修改)通用的保存方法  */
						doSave : function(config, callback) {
							var self = AmcUserModel.getInstance();
                            var curEditStatus = self.BEFORE_DATA.curEditStatus;
                            var url = "";
                            var msg = "正在进行操作，请稍等......";
                            if (config.isTempSave){//暂存
                            	url = "egov/asset/amcuser/doTempSave.do";
                            	msg = "正在进行暂存操作，请稍等......";
                            }else if(config.isCommit){//提交
                            	url = "egov/asset/amcuser/doCommit.do";
                            	msg = "正在进行提交操作，请稍等......";
                            }else if(config.isSave){//保存
                            	if(curEditStatus == self.ACTION.ONLY_ADD){
                            		url = "egov/asset/amcuser/doInsert.do";
                            	}else if(curEditStatus == self.ACTION.ONLY_EDIT){
                            		url = "egov/asset/amcuser/doUpdate.do";
                            	}else{
                            		$A.assetMsg.warn("编辑状态错误 ！");
                                    return;
                            	}
                            	msg = "正在进行保存操作，请稍等......";
                            }else {
                            	$A.assetMsg.warn("参数为空 ！");
                                return;
                            }
                            //保存附件文字说明
                            if($A("#amcUser_attach").length){
                				$.saveUploadRemark('amcUser_attach');
                			}
                            
							var mainOrgid = $A("#mainOrgid").combobox("getValue");
							if(mainOrgid == null || mainOrgid == ""){
								var rows = $A("#amcSubPosPanel_subPosByUser").grid("getAllData");
								if(rows != null && rows.length > 0){
									var mainOrgId = rows[0].ruleValueId;
									var mainOrgName = rows[0].ruleValueName;
									var majorCode = rows[0].ruleValueCode;
									var majorName = rows[0].ruleValueName;
									var positionId = rows[0].roleId;
									var positionName = rows[0].roleName;
									
									$A("#mainOrgid").combobox("setText", mainOrgName);
									$A("#mainOrgid").combobox("setValue", mainOrgId);
									$A("#mainPositionid").textbox("setValue", positionId);
								}
							}
							
							//进行必填项校验
							var userCode = $A("#userCode").textbox("getValue");
							var userName = $A("#userName").textbox("getValue");
							if(userCode == "" || userCode == null){
								$A.assetMsg.warn("用户账号不能为空！");
								return;
							}
							if(userName == "" || userName == null){
								$A.assetMsg.warn("用户名不能为空！");
								return;
							}
							
							$A.showWaitScreen(msg);//显示等待画面
							$A('#amcUserPageForm, #amcSubPosPanel_subPosByUser').sumbitAllComp({
								submitMode: 'all',
								url: url,
								callback: function (json) {
									if(json.tag==false){
										$A.assetMsg.warn(json.msg);
										$('#amcSubPosPanel_subPosByUser').grid('reload');
									}else if(json.tag == true){
										$A.assetMsg.success(json.msg);
										$.closeDialog();
										$A('#amcUserPanelUserdetails').grid('reload'); 
									}   
								},
								complete:function(){
				                	$A.hideWaitScreen();//隐藏等待画面	
				                }
							});
						},
						
						//审核 cofig:{isCheckPass:"通过",isCheckBack:"退回"}
						doAuditSave:function(config,callback){
							var url="";
							var self = AmcUserModel.getInstance();
							if (config.isCheckPass) {//审核
				                url = "egov/asset/amcuser/doAudit.do";
				                $A.showWaitScreen('正在进行审核操作，请稍等......');
				            }else if(config.isBack){//退回
				            	url = "egov/asset/amcuser/doBack.do";
				            	$A.showWaitScreen('正在进行退回操作，请稍等......');
				            }
							
							$A('#amcUserPageForm, #amcSubPosPanel_subPosByUser').sumbitAllComp({
								submitMode: 'all',
								url: url,
								callback: function (json) {
									$.closeDialog();
									if(json.tag==false){
										$a.messager.warn(json.msg);
									}else if(json.tag == true){
										$A.assetMsg.success(json.msg);
									}
									self.showPageCallBack();
									
								},
								complete:function(){
				                	$A.hideWaitScreen();//隐藏等待画面	
				                }
							});
						},					
						
						//删除一个机构
						delSubOrg : function(data, e) {
							var self = AmcUserModel.getInstance();
							var userCode = self.BEFORE_DATA.afaUser.userCode;
							if(data.id == null || data.id == undefined){
								$('#amcSubPosPanel_subPosByUser').grid('deleteRow',arguments[1]);
								return;
							}
								$a.assetMsg.confirm("确认删除该记录吗",{okCall : function() {
									if(data != null && data.orgId != null&& data.orgId != undefined&& data.orgId != "") {
										$app.ajax.ajaxCall({
											url : "egov/asset/amcuser/delSubOrg.do",
											data:{
												orgId: data.orgId,
												roleId: data.roleId,
												roleCode: data.roleCode,
												userCode: userCode
											},
											type : "post",
											callback : function(json) {
												if(json.tag == true){
													$a.assetMsg.correct(json.msg);
													$('#amcSubPosPanel_subPosByUser').grid('reload');
												}else{
													$a.assetMsg.correct(json.msg);
												}
											}
										});
									}else{
										var index = $('#amcSubPosPanel_subPosByUser').grid('getAllData').length - 1;
										$('#amcSubPosPanel_subPosByUser').grid('deleteRow', index);
									}
								}
							});
						},
						
						//设置附件
						setAttach:function(status){
							if($A("#amcUser_attach").length==0){
								return;
							}
							var _self = AmcUserModel.getInstance();
							var billId = $A("#userId").textbox("getValue");
							if(billId == ""){
								_self.FlowTabs.select(0);
								$A.assetMsg.warn("用户账号不能为空！");
							}
							var bizTypeName ='用户管理';
							var bizType = "USER_MANAGE";
							var itemType="-";
							$("#amcUserAttach").createNewAttach({
								grade: "1",
								groupId : billId,
								bizTypeName : bizTypeName,
								bizType : bizType,
								itemType : itemType,
								status:status,
								expand:true,//panel生成后true 展开 false收起
								attachId:'amcUser_attach'
							});
						},
						//附件的校验
					    attachVerify:function(data,callBack){
					    	callBack=callBack||function(){};
					        var userCode = data.afaUser.userCode;
					        var userName = data.afaUser.userName;
					        var userId = data.afaUser.userId;
					    	if(!$A("#amcUser_attach").length){
					    		$app.ajax.ajaxCall({
									url : "egov/asset/amcuser/attachVerify.do",
									data:{
										userCode: userCode,
										userId: userId
									},
									callback : function(json) {
										$a.hideWaitScreen();
										if(json.tag == false){
											data.flowTabs.select(1);
										}else{
											callBack();
										}									
									}
								});
					        }else{
					        	var fileInfo = $.sliderAttachRequired(undefined,'amcUser_attach');
				         		if(fileInfo.required) {
				         			data.flowTabs.switchContent(1);//切换tab页
				         			return;
				         		}
			         		   callBack();
					        }
					    },
						
						//表单初始化编辑
						beforeFormInit:function(page,curEditStatus,data){
							var self = AmcUserModel.getInstance();
							/*  1.需要走审核流程的表单控制   */
							//新增
							if(self.ACTION.ADD == curEditStatus){
								$input=page.find('#amcUserPageModify #status');
								$utils.setFormFieldStyle($input);
							}
							//查看，审核， 退回
							if(self.ACTION.VIEW == curEditStatus || self.ACTION.AUDIT == curEditStatus|| self.ACTION.AUDIT_REJECT == curEditStatus){
								var $input = $("#amcUserPageModify .editor input") ;
								$utils.setFormFieldStyle($input);
				        	}
							//修改
							if(self.ACTION.EDIT == curEditStatus){
								var status = data.afaUser.status;
								if(status == "-1"){
									$input=page.find('#amcUserPageModify #status');
									$utils.setFormFieldStyle($input);
								}
								$A("#userName").textbox("readonly",true);
								$A("#userCode").textbox("readonly",true);
							}
							
							/* 2. 不需要走审核流程的表单控制  */
							//新增
							/*if(self.ACTION.ONLY_ADD == curEditStatus){
								$input=page.find('#amcUserPageModify #status');
								$utils.setFormFieldStyle($input);
							}*/
							//修改
							if(self.ACTION.ONLY_EDIT == curEditStatus){
								var status = data.afaUser.status;
								/*if(status == "-1"){
									$input=page.find('#amcUserPageModify #status');
									$utils.setFormFieldStyle($input);
								}*/
								$A("#userName").textbox("readonly",true);
								$A("#userCode").textbox("readonly",true);
							}
						},
						
						beforePageInit:function(page,data){
							var self = AmcUserModel.getInstance();
							self.BEFORE_DATA = data;
							var curEditStatus = data.curEditStatus;
							//设置标题
							var title = "用户表单";
							if(self.ACTION.ADD == curEditStatus || self.ACTION.ONLY_ADD == curEditStatus){
								title = "新建" + title;
				        	}  
				        	if(self.ACTION.EDIT == curEditStatus || self.ACTION.ONLY_EDIT== curEditStatus){
				        		title = "修改" + title;
				      	    }  
				        	if(self.ACTION.VIEW == curEditStatus || self.ACTION.AUDIT_REJECT==curEditStatus
				        			|| self.ACTION.ONLY_VIEW == curEditStatus){
				        		title = "查看" + title;
				      	    }  
				        	if(self.ACTION.AUDIT==curEditStatus){
				        		title = "审核" + title;
				      	    }
				        	//初始化标题
							$("#userDialog > div.dialog-content > div > div.page-head > div.title").append('<span>'+title+'</span>')
							//初始化表单是否可编辑
							self.beforeFormInit(page,curEditStatus,data);
						},
						
						// 页面加载后初始化
						initPage : function() {
						   var self = AmcUserModel.getInstance();
						   $.validator.addMethod("phone", function (value, element) {
				                return utils.checkPhoneNumber(value);
				           });
						   var userCode = self.BEFORE_DATA.afaUser.userCode;
						   var curEditStatus = self.BEFORE_DATA.curEditStatus;
						   var orgData = {
									__xquery : "[{\"prop\":\"T.PARTY_CODE\",\"val\":\""+ userCode+ "\"}]"
								};
							$('#amcSubOrgPanel_subOrgsByUser').grid('setParameter', orgData);
							$('#amcSubOrgPanel_subOrgsByUser').grid('reload');
							var posData = {
									__xquery : "[{\"prop\":\"PARTY_CODE\",\"val\":\""+ userCode+ "\"}]"
								};
							$('#amcSubPosPanel_subPosByUser').grid('setParameter', posData);
							$('#amcSubPosPanel_subPosByUser').grid('reload');
							
							//设置网格是否可编辑
							if(self.ACTION.VIEW == curEditStatus || self.ACTION.AUDIT == curEditStatus|| self.ACTION.AUDIT_REJECT == curEditStatus){
								$A("#amcSubPosPanel_subPosByUser").grid('disableEdit');
								$A("#amcSubPosPanel_subPosByUser").grid('hideColumn','op');
				        	}
						   
						},
						//格式化单位名称
						formatterOrg:function(val, rowVal){
							return $status.formatterOrg(rowVal.financeBudgetCode,rowVal);
						},
						
						showUserInfo:function(data, callback){
							this.showPageCallBack = callback || function () {};
							var self = AmcUserModel.getInstance();
							var toDoStatus = data.toDoStatus;
							var billId = data.billId||null;
							var lifeState = data.lifeState||"0";
							var url="egov/asset/amcuser/showModify.do";
							if(self.ACTION.ADD == toDoStatus){
								url = "egov/asset/amcuser/showAdd.do";//新增
							}
							var userCode = "";
							if(data.userCode != undefined){
								userCode = data.userCode;
							}else{
								userCode = data.billId;
							}
							var isNeedAudit = data.isNeedAudit;
							
							$.uiExtend({
				                type: 'flow-page',
				                options: {
				                     title: '用户管理',  
				                     dialogId: "userDialog",
					                 title: "查看",
					                 wrapper: true,
					                 hasheader: false,
					                 reload: true,
									 hasFoot:true,footHeight:30,footInner:'<span></span>',//此三个参数设置tab界面是否具有底部，底部高度，底部承接内容的载体
								     beforeClose: null,//关闭当前对话窗口前所调用，关闭窗口前需有相应 弹窗设置可若条件不足可考虑在onpageLoad中通过获取当前对话窗口对象重置该方法
								     closeCallback:function(){ //关闭对话窗口后所调用回调函数
								    	 
								    }
				                },
				                tabsOp: {
				                    type: 'flow-tabs',
				                    beforeClick: function () {//tab页点击前所对应事件  未使用过
				                    },
				                    afterClick: function () {//tab页点击后所对应事件  未使用过
				                    },
				                    data: {
				                        title: '用户管理',
				                        tabs: [
				                            {
				                                text: '用户表单',
				                                url:url,//页面url
				                                params: {//调用后台方法对应参数
				                                	 userCode:userCode,
				                                	 isNeedAudit: isNeedAudit,
				              		                 lifeState:lifeState,
				              		                 action: toDoStatus
				              	                    },
									            buttonConfig:{//通过设置次参数可决定tab页面切换后按钮是否继续存在
									                //索引从1开始，1代表第二个tab，依次类推
									                showIndex:[1]
									            },
				                                onPageLoad: function (page,index,onPageArgs) {
				                                	
				                        			var flowTabs = page.FlowTabs;
				                        			flowTabs.$foot.css({'margin':'0 auto','width':'998px'});
				                                	var _self = AmcUserModel.getInstance();
				                                    var curEditStatus = page.BEFORE_DATA.curEditStatus;
				                                    //设置按钮参数
				                                    /*var btnConfig =[  {text: '意见', method:'amcuser_commentBtn'},
				                                                      {text: '流转状态', method: 'amcuser_flowBtn' },
				                                                      {text: '流程帮助', method: 'amcuser_flowHelpBtn'}];*/
				                                     
				                                     AmcUserModel.getInstance().loadDict(data, curEditStatus);
				                                     
				                                     var afaUser = page.BEFORE_DATA.afaUser;
													 $A('#mainOrgid').combobox('setText',afaUser.mainOrgName);
													 $A('#mainPositionid').textbox('setValue',afaUser.mainPositionid);
				                                     
				                                     switch (curEditStatus) {
					             		 				case _self.ACTION.ADD:
					             		 				case _self.ACTION.EDIT:
					             		 					var btnConfig =[{text: '意见', method:'amcuser_commentBtn'},
						                                                      {text: '流转状态', method: 'amcuser_flowBtn'},
						                                                      {text: '流程帮助', method: 'amcuser_flowHelpBtn'}];
					             		 					btnConfig.splice(0, 0, {text: '暂存', method: 'amcuser_tempSaveBtn'},
				                                                     			   {text: '提交', method: 'amcuser_commitBtn'});
					             		 					flowTabs.addButtons(btnConfig,index);//初始化界面按钮
					             		 					break;
					             		 				case _self.ACTION.AUDIT:
					             		 					var btnConfig =[{text: '意见', method:'amcuser_commentBtn'},
						                                                      {text: '流转状态', method: 'amcuser_flowBtn'},
						                                                      {text: '流程帮助', method: 'amcuser_flowHelpBtn'}];
					             		 					btnConfig.splice(0, 0, {text: '审核', method: 'amcuser_checkBtn'},
					             		 										   {text: '退回',method: 'amcuser_backBtn'});
					             		 					flowTabs.addButtons(btnConfig,index);
					             		 					break;
					             		 				case _self.ACTION.VIEW:
					             		 					var btnConfig =[{text: '意见', method:'amcuser_commentBtn'},
						                                                      {text: '流转状态', method: 'amcuser_flowBtn'},
						                                                      {text: '流程帮助', method: 'amcuser_flowHelpBtn'}];
					             		 					flowTabs.addButtons(btnConfig,index);
					             		 					break;
					             		 				case _self.ACTION.ONLY_ADD:
					             		 				case _self.ACTION.ONLY_EDIT:
					             		 					var btnConfig =[];
					             		 					btnConfig.splice(0, 0, {text: '保存', method: 'amcuser_saveBtn'});
					             		 					flowTabs.addButtons(btnConfig,index);
					             		 					break;
					             		 				default :
					             		 					$A.assetMsg.warn("当前编辑状态错误！");
					             		 					break;
					             		 		    };
				                                }
				                                	
				                            },
				                            
				                             {
				                            	text: '相关附件',
				                                url:'egov/asset/amcuser/showAttach.do',//页面url
				                                hide:false,
				                                params: {
				                                        	   
				                    	        }
				                             }
				                        ]
				                    }
				                },
				                complete: function () {
				            
				                }
				            });
						},
						
						loadDict:function(data, curEditStatus){
							var self = AmcUserModel.getInstance();
							var status = self.BEFORE_DATA.afaUser.status;
							var userType = self.BEFORE_DATA.afaUser.userType;
							//加载用户类型下拉列表
							$app.ajax.ajaxCall({
								url : "egov/asset/amcuser/getUserType.do",
								callback : function(json) {
									$A("#userType").combobox("loadData",json);
									if(userType != null && userType != ""){
										for(var i = 0;i < json.length;i++){
											if(json[i].dictId == userType){
												$A("#userType").combobox("setValue",userType);
												$A("#userType").combobox("setText",json[i].dictName);
											}
										}
									}else{
										$A("#userType").combobox("setValue",json[1].dictId);
										$A("#userType").combobox("setText",json[1].dictName);
									}
									/*if(data != null && data.userType != null){
										for(var i = 0;i < json.length;i++){
											if(json[i].dictId == data.userType){
												$A("#userType").combobox("setValue",data.userType);
												$A("#userType").combobox("setText",json[i].dictName);
											}
										}
									}else{
										$A("#userType").combobox("setValue",json[1].dictId);
										$A("#userType").combobox("setText",json[1].dictName);
									}*/
								}
							});
							//加载用户状态下拉列表
							$app.ajax.ajaxCall({
								url : "egov/asset/amcuser/getUserStatus.do",
								callback : function(json) {
									$A("#status").combobox("loadData",json);
									if(status != null){
										if(status != "-1"){
											for(var i = 0;i < json.length;i++){
												if(json[i].dictId == status){
													$A("#status").combobox("setValue",status);
													$A("#status").combobox("setText",json[i].dictName);
												}
											}
										}else{
											$A("#status").combobox("setValue","-1");
											$A("#status").combobox("setText","新建中");
										}
									}
								}
							});
						},
						refreshData : function() {
							$("#amcSubPosPanel_subPosByUser").grid("reload");
						},
						//设置默认
						setDefault:function(data, e){
							var mainOrgId = data.ruleValueId;
							var mainOrgName = data.ruleValueName;
							var majorCode = data.ruleValueCode;
							var majorName = data.ruleValueName;
							var positionId = data.roleId;
							var positionName = data.roleName;
							$A("#mainOrgid").combobox("setText", mainOrgName);
							$A("#mainOrgid").combobox("setValue", mainOrgId);
							$A("#mainPositionid").textbox("setValue", positionId);
							$A.assetMsg.success("默认机构设置成功！");
						},
						// 控件属性重置
						initUIExtConfig : function() {
							var _self = this;
							this.uiExtConfig = {
								amcSubPosPanel_subPosByUser:function(config){
									config.getButton("delSubOrg_btn").setAttr("handler", _self.delSubOrg);
									config.getButton("amcuser_subOrg_addBtn").setAttr("handler", function () {
			                            $A("#amcSubPosPanel_subPosByUser").grid('appendRow');
									});
									config.getButton("setDefaultOrg_btn").setAttr("handler", _self.setDefault);
									
									var ruleValueCodeEditor = config.getEditor("ruleValueCode");
									ruleValueCodeEditor.setAttr("afterSelected", function(node){
										//获取当前编辑行号
										var index = $A('#amcSubPosPanel_subPosByUser').grid('getCurrentEditRowIndex');
										//定位当前编辑行
										$A('#amcSubPosPanel_subPosByUser').grid('selectRow',index);						
										//获取编辑行 网格对象
										var rowData = $A('#amcSubPosPanel_subPosByUser').grid('getDataByRowIndex',index);
										
										var oldOrgCode = rowData.ruleValueCode;
										var newOrgCode = node.orgCode;
										var newOrgName = node.orgName;
										var roleCode = rowData.roleCode;
										var roleName = rowData.roleName;
										//后端判断是否有人对应该单位该岗位权限
										if(oldOrgCode != newOrgCode && newOrgCode != null && roleCode != null){
											var url = "egov/asset/amcuser/queryByOrgAndRole.do";
											$app.ajax.ajaxCall({
												url : url,
												data:{
													"orgCode": newOrgCode,
													"roleCode": roleCode,
												},
												callback : function(json) {
													if(json.tag == true){
														$A.assetMsg.warn("已有人拥有【"+ newOrgCode+"】" + newOrgName +"【" + roleCode +"】"+ roleName +"相应权限！");
													}
												}
											});
										}
										var $ruleValueId = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','ruleValueId');
										var $ruleValueCode = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','ruleValueCode');
										var $ruleValueName = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','ruleValueName');
										var $financeBudgetCode = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','financeBudgetCode');
										var $rgnId = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','rgnId');
										var $rgnCode = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','rgnCode');
										var $rgnName = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','rgnName');
										
										$ruleValueId.textbox('setValue',node.orgId);
										$ruleValueCode.textbox('setValue',node.orgCode);
										$ruleValueName.textbox('setValue',node.orgName);
										$financeBudgetCode.textbox('setValue',node.financeBudgetCode);
										$rgnId.textbox('setValue',node.rgnId);
										$rgnCode.textbox('setValue',node.rgnCode);
										$rgnName.textbox('setValue',node.rgnName);
										
										$A('#amcSubPosPanel_subPosByUser').grid('endEdit');
									});
								
									var roleCodeEditor = config.getEditor("roleCode");
									roleCodeEditor.setAttr("afterSelected", function(node){
										//获取当前编辑行号
										var index = $A('#amcSubPosPanel_subPosByUser').grid('getCurrentEditRowIndex');
										//定位当前编辑行
										$A('#amcSubPosPanel_subPosByUser').grid('selectRow',index);						
										//获取编辑行 网格对象
										var rowData = $A('#amcSubPosPanel_subPosByUser').grid('getDataByRowIndex',index);
										var oldRoleCode = rowData.roleCode;
										var newRoleCode = node.roleCode;
										var newRoleName = node.roleName;
										var orgCode = rowData.ruleValueCode;
										var orgName = rowData.ruleValueName;										
										//后端判断是否有人对应该单位该岗位权限
										if(oldRoleCode != newRoleCode && orgCode != null && newRoleCode != null){
											var url = "egov/asset/amcuser/queryByOrgAndRole.do";
											$app.ajax.ajaxCall({
												url : url,
												data:{
													"orgCode": orgCode,
													"roleCode": newRoleCode,
												},
												callback : function(json) {
													if(json.tag == true){
														$A.assetMsg.warn("已有人拥有【"+ orgCode+"】" + orgName +"【" + newRoleCode +"】"+ newRoleName +"相应权限！");
													}
												}
											});
										}
										var $roleId = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','roleId');
										var $roleType = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','roleType');
										var $roleCode = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','roleCode');
										var $roleName = $A("#amcSubPosPanel_subPosByUser").grid('getEditor','roleName');
										
										$roleId.textbox('setValue',node.roleId);
										$roleType.textbox('setValue',node.roleType);
										$roleCode.textbox('setValue',node.roleCode);
										$roleName.textbox('setValue',node.roleName);
										
										$A('#amcSubPosPanel_subPosByUser').grid('endEdit');
									});
								}

							}
						}
					});
			AmcUserModel.getInstance = function() {
				if (!this.instance) {
					this.instance = new AmcUserModel();
				}
				return this.instance;
			}

			return AmcUserModel.getInstance();
		})