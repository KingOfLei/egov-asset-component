/**
 * * Auto generated by Bossssoft Studio version 1.0 beta
 * Thu Oct 27 16:05:43 CST 2016
 */
//define(['引入外部js模块或控件'],function('引入外部js或控件的别名'){})
define(
    ["app/widgets/window/app-dialog", "app/app-pagebase"],
    function(Dialog, PageBase) {
        var ActivityDlg = PageBase.extend({
            //类初始化
            initialize: function() {
                ActivityDlg.superclass.initialize.call(this);
            },
            //网格显示或者列表显示
            SHOW_TYPE: {
                SHOW_GRID: "SHOW_GRID",
                SHOW_LIST: "SHOW_LIST"
            },
            //审核类型
            AUDIT_TYPE: {
                CARD_AUDIT: "CARD_AUDIT", //卡片审核
                USE_AUDIT: "USE_AUDIT", //使用审核
                DISPOSE_AUDIT: "DISPOSE_AUDIT", //处置审核
                RECOVER_AUDIT: "RECOVER_AUDIT", //收回审核
                CARD_CHANGE_AUDIT: "CARD_CHANGE_AUDIT", //卡片变动审核
                CARD_SPLIT_AUDIT: "CARD_SPLIT_AUDIT", //卡片拆分审核
                CARD_VOID_AUDIT: "CARD_VOID_AUDIT", //卡片作废审核	
                //投融资
                BCPM_PROJECT_AUDIT: "BCPM_PROJECT_AUDIT",
                BCPM_PROJECT_SPLIT_AUDIT: "BCPM_PROJECT_SPLIT_AUDIT",
                BCPM_PROJECT_TMPUSE_AUDIT: "BCPM_PROJECT_TMPUSE_AUDIT",
                BCPM_PROJECT_DISPOSE_AUDIT: "BCPM_PROJECT_DISPOSE_AUDIT",
                BCPM_PROJECT_TRANSFER_AUDIT: "BCPM_PROJECT_TRANSFER_AUDIT",
                //报表
                NB_AUDIT: 'NB_AUDIT',
                PZZC_AUDIT: 'PZZC_AUDIT',
                GLJBB_AUDIT: 'GLJBB_AUDIT',
                REGISTER_AUDIT:"REGISTER_AUDIT",
                QYGYQY_AUDIT:"QYGYQY_AUDIT",
                //用户管理审核
                USER_MANAGE_AUDIT:"USER_MANAGE_AUDIT",
                INVENTORY_TASK_AUDIT:"INVENTORY_TASK_AUDIT",
                INVENTORY_AUDIT:"INVENTORY_AUDIT",
            },
            AUDIT_TYPE_NAME:{
            	 CARD_AUDIT: "卡片审核", //卡片审核
                 USE_AUDIT: "使用审核", //使用审核
                 DISPOSE_AUDIT: "处置审核", //处置审核
                 RECOVER_AUDIT: "收回审核", //收回审核
                 CARD_CHANGE_AUDIT: "卡片变动审核", //卡片变动审核
                 CARD_SPLIT_AUDIT: "卡片拆分审核", //卡片拆分审核
                 CARD_VOID_AUDIT: "卡片作废审核", //卡片作废审核	
                 //投融资
                 BCPM_PROJECT_AUDIT: "项目登记审核",
                 BCPM_PROJECT_SPLIT_AUDIT: "项目细化审核",
                 BCPM_PROJECT_TMPUSE_AUDIT: "项目临时使用审核",
                 BCPM_PROJECT_DISPOSE_AUDIT: "项目取消审核",
                 BCPM_PROJECT_TRANSFER_AUDIT: "项目移交审核",
                 //报表
                 NB_AUDIT:'资产年报',
                 PZZC_AUDIT: '配置自查',
                 GLJBB_AUDIT:'管理局报表',
                 REGISTER_AUDIT:"产权登记审核",
                 QYGYQY_AUDIT:"企业国有权益",
                 //用户管理审核
                 USER_MANAGE_AUDIT:"用户审核",
                 //盘点
                 INVENTORY_TASK_AUDIT:"盘点任务",
                 INVENTORY_AUDIT:"盘点单"
            },
            //显示类型
            showType: null,
            //审核类型
            auditType: null,
            //存储弹出窗口回调
            showPageCallBack: null,
            //当前窗口状态
            indexAction: null,
            //业务类型
            busType: null,
            //业务ID
            businessId: null,
            //控件监听事件  格式：#控件id#:{事件名:事件方法}
            listeners: {
                //关闭
                activityPage_closeBtn: {
                    click: function() {
                        $.closeDialog();
                    }
                }
            },
            //新增、修改和查看窗口
            showPage: function(showType, auditType, data, callback) {
                this.showPageCallBack = callback || function() {};
                var self = this;
                this.busType = data.busType;
                this.businessId = data.businessId;
                this.showType = showType;
                this.auditType = auditType;
                var options = {
                    url: "egov/asset/aims/activity/showActivitiProcess.do",
                    dialogId: "showActivitiProcess",
                    title: "流转状态",
                    width: 600,
                    height: 600,
                    wrapper: true,
                    hasheader: false,
                    reload: true,
                    onPageLoad: function(obj) {
                        self.createHeadInfo(data, self, auditType);
                    }
                };
                $.openModalDialog(options)
            },

            // 获取当前页面审核类型
//            getAuditType: function(arrAuditType, curAuditType){
//            	var auditType = '';
//            	for (var key in arrAuditType) {
//            		if (arrAuditType[key] === curAuditType) {
//            			auditType = '[' + arrAuditType[key] + ']';
//            			break;
//            		};
//            	};
//
//            	return auditType;
//            },

            // 加载页面
            createHeadInfo: function(data, self, auditType) {
                var auditTypeName = auditType?'[' + self.AUDIT_TYPE_NAME[auditType] + ']':'';
                
                if (data.data == null) {
                    $A("#activityPage_panel_top").hide();
//                    var auditTypeWord = self.getAuditType(self.AUDIT_TYPE, auditType);
                    $a('.dialog-header >h5').html(auditTypeName + '流转状态');

                } else {
                	var panelTopHtml = '',
                		orgName = data.data.orgName?data.data.orgName:'',
                		billCode = data.data.billCode?data.data.billCode:'';
                    //根据不同类型的审核显示不同的信息
                    if (auditType == self.AUDIT_TYPE.USE_AUDIT) {
                    	panelTopHtml = "<div class='circulation-code'>单据编号：" + data.data.billCode + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单位名称：" + orgName + "</div>\
                    			<div class='circulation-code'>单据类型：" + data.data.useModeName + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;业务状态名称：" + data.data.bizStatusName + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.RECOVER_AUDIT) {
                    	panelTopHtml = "<div class='circulation-code'>单据编号：" + data.data.billCode +  "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单位名称：" + orgName + "</div>\
            			<div class='circulation-code'>单据类型：" + data.data.recoverModeName + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.DISPOSE_AUDIT) {
                    	panelTopHtml = "<div class='circulation-code'>单据编号：" + data.data.billCode + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单位名称：" + orgName + "</div>\
            			<div class='circulation-code'>处置类型：" + data.data.disposeTypeName + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.CARD_AUDIT || auditType == self.AUDIT_TYPE.CARD_SPLIT_AUDIT) {
                    	panelTopHtml = "<div class='circulation-type'>资产编码：" + data.data.assetCode + "</div>\
            			<div class='circulation-reason' title=" + data.data.assetName + '>资产名称：' + data.data.assetName + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.CARD_CHANGE_AUDIT) {
                    	panelTopHtml = "<div class='circulation-code'>单据编码：" + billCode + "</div>\
            			<div class='circulation-reason' title=" + data.data.changeReason + '>变动原因：' + data.data.changeReason + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.CARD_VOID_AUDIT) {
                    	panelTopHtml = "<div class='circulation-code'>单据编码：" + billCode + "</div>\
            			<div class='circulation-reason' title=" + data.data.voidReason + '>作废原因：' + data.data.voidReason + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.BCPM_PROJECT_AUDIT || auditType == self.AUDIT_TYPE.BCPM_PROJECT_SPLIT_AUDIT) {
                        //项目登记审核、项目细化
                    	panelTopHtml = "<div class='circulation-code'>备案编号：" + data.data.prjCode + "</div>\
            			<div class='circulation-code'>项目名称：" + data.data.prjName + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.BCPM_PROJECT_TMPUSE_AUDIT || auditType == self.AUDIT_TYPE.BCPM_PROJECT_TRANSFER_AUDIT || auditType == self.AUDIT_TYPE.BCPM_PROJECT_DISPOSE_AUDIT) {
                        //临时使用、 移交、 取消
                    	panelTopHtml = "<div class='circulation-code'>单据编码：" + data.data.billCode + "</div>\
            			<div class='circulation-code'>单据类型：" + data.data.bizName + "</div>";
                    } else if (auditType == self.AUDIT_TYPE.CARD_AUDIT || auditType == self.AUDIT_TYPE.CARD_SPLIT_AUDIT) {;
                    } else if (auditType == self.AUDIT_TYPE.PZZC_AUDIT) {
                    	panelTopHtml = "<div class='circulation-code'>单位名称：" + data.data.orgName + "</div>";
                    } else if(auditType == self.AUDIT_TYPE.REGISTER_AUDIT){
                    	panelTopHtml = "<div class='circulation-code'>单位名称：" + data.data.orgName + "</div>\
                    	<div class='circulation-code'>机构名称：" + data.data.orgRegName + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;机构类型：" + data.data.mainTypeName + "</div>";
                    } else if(auditType == self.AUDIT_TYPE.QYGYQY_AUDIT){
                    	panelTopHtml = "<div class='circulation-code'>单位名称：" + data.data.orgName + "</div>";
                    } else if(auditType == self.AUDIT_TYPE.USER_MANAGE_AUDIT){
                    	var userCode = data.data.userCode?data.data.userCode:'',
                    			userName = data.data.userName?data.data.userName:'';
                    	panelTopHtml = "<div class='circulation-code'>用户编码：" + userCode + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用户名："+ userName +"</div>";
                    } else if(auditType == self.AUDIT_TYPE.INVENTORY_TASK_AUDIT || auditType == self.AUDIT_TYPE.INVENTORY_AUDIT){
                    	panelTopHtml = "<div class='circulation-code'>单据编号：" + data.data.billCode + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单位名称：" + orgName + "</div>\
                    	<div class='circulation-code'>业务状态：" + data.data.bizStatusName + "</div>";
                    } else if(auditType == self.AUDIT_TYPE.GLJBB_AUDIT){
                    	panelTopHtml = "<div class='circulation-code'>单位名称：" + data.data.orgName + "</div>";
                    } else if(auditType == self.AUDIT_TYPE.NB_AUDIT){
                    	panelTopHtml = "<div class='circulation-code'>单位名称：" + data.data.orgName + "</div>";
                    }
                    
                    $A("#activityPage_panel_top").append("<div class='circulation-state-header'>" + panelTopHtml + "</div>");
                    
                    $A('.dialog-header >h5').html(auditTypeName + '流转状态');
                    $A("#activityPage_panel_top").show();
                }
            },
            //页面加载后初始化
            initPage: function() {
                $A("#activityPage_panel_bottom").hide();
//                ActivityDlg.getInstance().getActivitiProcess();
                ActivityDlg.getInstance().loadListInfo();
            },
            
            getActivitiProcess: function() {
                var url = "egov/asset/aims/activity/getActivitiProcess.do";
                var self = this;
                var busType = this.busType;
                var businessId = this.businessId;
                var showType = this.showType;
                var auditType = this.auditType;
                $app.ajax.ajaxCall({
                    url: url,
                    data: {
                        busType: busType,
                        businessId: businessId
                    },
                    callback: function(data) {
                        if (data.code != "888888") {
                            $A("#activityPage_panel_top>.circulation-state-header").append("<div class='circulation-code'>" + "暂无流转状态信息！" + "</div>");
                            return;
                        }
                        
                        self.createListInfo(data);
                        return;
                    }
                });
            },
            
            // 创建流转状态列表数据
            loadListInfo: function(){
                var url = "activitiWeb/flowStateList.do";
                var self = this;
                var busType = this.busType;
                var businessId = this.businessId;
                $app.ajax.ajaxCall({
                    url: url,
                    data: {
                        busId: businessId
                    },
                    callback: function(data) {
                        if (data.code != "888888") {
                            $A("#activityPage_panel_top>.circulation-state-header").append("<div class='circulation-code'>" + "暂无流转状态信息！" + "</div>");
                            return;
                        }
                        
                        self.createListInfo(data);
                        return;
                    }
                });
            },
            
            // 创建流转状态列表
            createListInfo: function(data) {
            	var liHtml = '';
            	
                for(var i = 0;i < data.list.length; i++){
                	var liByListHtml = '<li><span>操作人员：</span>' + data.list[i].executor + ' (' + data.list[i].nodeName + ')</li>\
                		<li><span>操作内容：</span>' + data.list[i].statement + ' [' + data.list[i].description + '] </li>';
                	if(data.list[i].remark){
                		liByListHtml += '<li class="remark"><span>意见：</span>' + data.list[i].remark + '</li>';
                	};
                	
                	liHtml += '<li><span>'+ data.list[i].time +'</span><span class="node-info">[' + data.list[i].description + '] </span><ul>' + liByListHtml + '</ul></li>';
                };
                
                var listHtml = '<ul class="circulation-state">' + liHtml + '</ul>';
                $('#activitiPage_center').html(listHtml);
            },
            
            //控件属性重置
            initUIExtConfig: function() {
                this.uiExtConfig = {
                    //格式 #控件id#:function(控件属性集类){ config.setAttr("控件属性名","属性值"),// 网格，下拉网格，特殊设置config.getColumn("网列id").setAttr("列属性名","列属性值")config.getButton("网格内包含的按钮id").setAttr("handler","点击事件")  }
                }
            }
        });
        //创建窗体类单例
        ActivityDlg.getInstance = function() {
            if (!this.instance) {
                this.instance = new ActivityDlg();
            }
            return this.instance;
        }
        return ActivityDlg.getInstance();
    })