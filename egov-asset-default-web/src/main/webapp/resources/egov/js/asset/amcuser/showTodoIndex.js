/**
 * * Auto generated by Bossssoft Studio version 1.0 beta
 * Sat Mar 04 18:34:59 CST 2017
 */
//define(['引入外部js模块或控件'],function('引入外部js或控件的别名'){})
define(
		[ 
		  "app/widgets/window/app-dialog",
		  "app/app-pagebase",
		  "resources/egov/js/common/utils/StatusUtils",
		  "resources/egov/js/ext/js/etl/etl-helper.js"],
		function(Dialog,PageBase,StatusUtils,etlHelper) {
		   var AssetTodoModel = PageBase.extend({
		             //类初始化
		            initialize : function() {
						AssetTodoModel.superclass.initialize.call(this);
					},
					//控件监听事件  格式：#控件id#:{事件名:事件方法}
					listeners:{
						userManageTodoIndexDetail:{
							click: function(){
								//查看								
								var node = $('#userManageTodoIndex_grid').grid('getSelections');
								if (node == "") {
									$A.assetMsg.warn("请选择需要查看的用户信息");
									return false;
								}
								if(node.length > 1){
									$A.assetMsg.warn("只能选择一条用户信息进行查看");
									return false;
								}
								else {
									var rowData = node[0];
									var opts = {
										    billId:rowData.userCode,
										    lifeState:0,
										    toDoStatus:9,	
										    isTodo:0,
										    editStatus:"0"
									};
									$.todoJoinMonitor('USER_MANAGE',opts,function(){
					        			$("#userManageTodoIndex_query").xquery("quickQuery");	
									});
							    }
							}
						},
						
						userName:{
							onChange:function(newVal,oldVal){
			        			$("#userManageTodoIndex_query").xquery("quickQuery");
			            	}
						},
						userCode:{
							onChange:function(newVal,oldVal){
			        			$("#userManageTodoIndex_query").xquery("quickQuery");
			            	}
						},
						
						orgId:{
							onChange:function(newVal,oldVal){
								$("#userManageTodoIndex_query").xquery("quickQuery");
							}
						},
						
						
						todoTypeTree:{
							onAsyncSuccess:function(event,treeId,treeNode,msg){								
								var treeObj = $('#' + treeId).getAppZTree();
								var node = treeObj.getNodes()[0];
					        	treeObj.expandNode(node,true);
							}
						},
						userManageTodoIndex_grid:{
							onDblClickRow:function(rowData,rowIndex){							
								//打开窗体
								var opts = {
										 billId:rowData.userCode,
										 lifeState:0,
										 toDoStatus:9,	
										 isTodo:0,
										 editStatus:"0"
								};
								$.todoJoinMonitor('USER_MANAGE',opts,function(){
				        			$("#userManageTodoIndex_query").xquery("quickQuery");	
								});
							}
							
						}
					},
					//读取数据
					loadData:function(event,treeId,treeNode,clickFlag){
						//修改年度操作符
						$A('#year').attr("operator",treeNode.str08);
						//赋值
						$A('#year').textbox('setValue',treeNode.str07);
						
						$("#userManageTodoIndex_grid").grid("setFixedParameter",{busType:treeNode.str06});
				    	$("#userManageTodoIndex_query").xquery("quickQuery");
					},
					
					//页面加载后初始化
					initPage:function(){
			            $A("#userManageTodoIndex_panel_bottom").find('div.grid-header-title').find('span')[0].innerHTML="用户管理办结库 <span class='grid_tips'>&nbsp;&nbsp;注：双击信息项可查看详情</span>";
						$("#userManageTodoIndex_query").xquery("toggle");
	        			//$("#userManageTodoIndex_query").xquery("quickQuery");
					},
					userExport:function(){
						etlHelper.exportExcel('userManageTodoIndex_grid',{
			            	checkRow:false,
			                exportType:"xlsx",
			                fileName:"用户管理办结库",sheetName:"sheet1"
			            });
					},
					
					//显示查看业
					showViewPage:function(data,e){
					    var _self=this;
						
					},
					refreshData:function(){
						$("#userManageTodoIndex_grid").grid("reload");
					},
					
					//控件属性重置
					initUIExtConfig : function() {
					    var _self=this;
						this.uiExtConfig={
							//格式 #控件id#:function(控件属性集类){ config.setAttr("控件属性名","属性值"),// 网格，下拉网格，特殊设置config.getColumn("网列id").setAttr("列属性名","列属性值")config.getButton("网格内包含的按钮id").setAttr("handler","点击事件")  }
								userManageTodoIndex_grid:function(config){
									config.getButton("userManageTodoIndex_export").setAttr("handler",_self.userExport);
							}
						
						}
					}

		 });
		 AssetTodoModel.getInstance=function(){
		     if (!this.instance){
		    	 this.instance =new AssetTodoModel();
		     }
		     return this.instance;
		 }
		
		 return  AssetTodoModel.getInstance();
	   })