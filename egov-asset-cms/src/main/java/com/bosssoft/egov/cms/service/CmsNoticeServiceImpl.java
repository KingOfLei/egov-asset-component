package com.bosssoft.egov.cms.service;
/**
 * 福建博思软件 1997-2016 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Fri Dec 23 00:03:02 CST 2016
 */

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.cms.entity.CmsNotice;
import com.bosssoft.egov.cms.mapper.CmsNoticeMapper;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.persistence.entity.Condition;
import com.bosssoft.platform.common.lang.data.Searcher;


/**
 * 类说明: CmsNoticeService接口实现类. 
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2016-12-23   xiedeshou　　　新建
 * </pre>
 */
@Service
public class CmsNoticeServiceImpl implements CmsNoticeService {

	private static Logger logger = LoggerFactory.getLogger(CmsNoticeServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private CmsNoticeMapper cmsNoticeMapper;
	
	/**
	 *
	 * @param cmsNotice
	 */
	public void addCmsNotice(CmsNotice cmsNotice)  {
		cmsNoticeMapper.insertSelective(cmsNotice);
	}

	/**
	 *
	 * @param cmsNotice
	 */
	public void delCmsNotice(CmsNotice cmsNotice)  {
		cmsNoticeMapper.deleteByPrimaryKey(cmsNotice);
	}

	/**
	 *
	 * @param cmsNotice
	 */
	public void updateCmsNotice(CmsNotice cmsNotice)  {
		cmsNoticeMapper.updateByPrimaryKey(cmsNotice);
	}

	/**
	 *
	 * @param cmsNotice
	 * @retrun
	 */
	public List<CmsNotice> getCmsNoticeList(CmsNotice cmsNotice)  {
		return cmsNoticeMapper.select(cmsNotice);
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<CmsNotice> queryCmsNoticePage(Searcher searcher, Page<CmsNotice> page,String userCode)  {
		return queryPage(searcher, page,userCode);
	}

	private Page<CmsNotice> queryPage(Searcher searcher, Page<CmsNotice> page,String userCode)  {
		return queryPage(searcher, page,"","",userCode);
	}
	
	private Page<CmsNotice> queryPage(Searcher searcher, Page<CmsNotice> page,String condition,String userCode)  {
		return cmsNoticeMapper.queryCmsNoticePage(searcher, page,condition,"",userCode);
	}
	
	private Page<CmsNotice> queryPage(Searcher searcher, Page<CmsNotice> page,String condition,String orderby,String userCode )  {
		return cmsNoticeMapper.queryCmsNoticePage(searcher, page,condition,orderby,userCode);
	}
	
	@Override
	public CmsNotice getCmsNotice(CmsNotice cmsNotice) {
		// TODO Auto-generated method stub
		return cmsNoticeMapper.selectByPrimaryKey(cmsNotice);
	}

	@Override
	public List<CmsNotice> getAllCmsNotice() {
		// TODO Auto-generated method stub
		return cmsNoticeMapper.selectAll();
	}

	@Override
	public CmsNotice getCmsNotice(String id) {
       Condition condition = new Condition(CmsNotice.class);
       condition.createCriteria().andEqualTo("id", id);
       List<CmsNotice> list = cmsNoticeMapper.selectByExample(condition);
		return list != null && !list.isEmpty() ? list.get(0) : new CmsNotice();
	}

	@Override
	public List<CmsNotice> getCmsNoticeListByLoginView(int limit) {
	    Condition condition = new Condition(CmsNotice.class);
	    condition.createCriteria().andEqualTo("isPortal", "1");
	    List<CmsNotice> list = cmsNoticeMapper.selectByExample(condition);	
	    return list != null ? list : new ArrayList<CmsNotice>();
	}

	@Override
	public List<CmsNotice> queryCmsNotice(Searcher searcher,String userCode) {
		return cmsNoticeMapper.queryCmsNotice(searcher,userCode);
	}

	@Override
	public List<CmsNotice> queryByDate(String startDate,String endDate,String userCode) {
		return cmsNoticeMapper.queryByDate(startDate,endDate,userCode);
	}

	@Override
	public List<CmsNotice> queryCmsNotice(Searcher searcher, String condition,
			String orderby,String userCode) {
		// TODO Auto-generated method stub
		return cmsNoticeMapper.queryCmsNoticePageBy(searcher,condition,orderby,userCode);
	}

	@Override
	public int getAttachCount(String noticeId) {
		// TODO Auto-generated method stub
		return cmsNoticeMapper.getAttachCount(noticeId);
	}

	@Override
	public int getReadCount(String noticeId,String userCode) {
		// TODO Auto-generated method stub
		return cmsNoticeMapper.getReadCount(noticeId, userCode);
	}
	
	@Override
	public Page<CmsNotice> queryCmsNoticePage(Searcher searcher,
			Page<CmsNotice> page, String condition,String userCode) {
		// TODO Auto-generated method stub
		return queryPage(searcher, page, condition,userCode);
	}

	@Override
	public Page<CmsNotice> queryCmsNoticePage(Searcher searcher,
			Page<CmsNotice> page, String condition, String orderby,String userCode) {
		// TODO Auto-generated method stub
		return queryPage(searcher, page, condition, orderby,userCode);
	}

}