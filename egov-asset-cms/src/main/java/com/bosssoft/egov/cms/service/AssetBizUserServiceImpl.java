
/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Wed Apr 12 00:55:20 CST 2017
 */
package com.bosssoft.egov.cms.service;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.cms.entity.AssetBizUser;
import com.bosssoft.egov.cms.mapper.AssetBizUserMapper;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.persistence.entity.Condition;
import com.bosssoft.platform.common.lang.data.Searcher;


/**
 * 类说明: AssetBizUserService接口实现类. 
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017-04-12   Administrator　　　新建
 * </pre>
 */
@Service
public class AssetBizUserServiceImpl implements AssetBizUserService {

	private static Logger logger = LoggerFactory.getLogger(AssetBizUserServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private AssetBizUserMapper assetBizUserMapper;
	
	/**
	 *
	 * @param assetBizUser
	 */
	public void addAssetBizUser(AssetBizUser assetBizUser)  {
		assetBizUserMapper.insertSelective(assetBizUser);
	}

	/**
	 *
	 * @param assetBizUser
	 */
	public void delAssetBizUser(AssetBizUser assetBizUser)  {
		assetBizUserMapper.deleteByPrimaryKey(assetBizUser);
	}

	/**
	 *
	 * @param assetBizUser
	 */
	public void updateAssetBizUser(AssetBizUser assetBizUser)  {
		assetBizUserMapper.updateByPrimaryKey(assetBizUser);
	}

	/**
	 *
	 * @param assetBizUser
	 * @retrun
	 */
	public List<AssetBizUser> getAssetBizUserList(AssetBizUser assetBizUser)  {
		return assetBizUserMapper.select(assetBizUser);
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<AssetBizUser> queryAssetBizUserPage(Searcher searcher, Page<AssetBizUser> page)  {
		return assetBizUserMapper.queryAssetBizUserPage(searcher, page);
	}

	@Override
	public void updateOrInsertAssetBizUserRecord(AssetBizUser assetBizUser) {
		// TODO Auto-generated method stub
		//先判断是否存在
		Condition condition = new Condition(AssetBizUser.class);
		condition.createCriteria().andCondition("BIZ_ID=", assetBizUser.getBizId())
		.andCondition("USER_CODE=", assetBizUser.getUserCode());
		//插入
		SimpleDateFormat formatter=new SimpleDateFormat("yyyyMMddHHmmssSSS");
    	Date date=new Date();
		assetBizUser.setReadTime(formatter.format(date));
		int count = assetBizUserMapper.selectCountByExample(condition);
		if(count > 0){
			//更新
			assetBizUserMapper.updateReadCount(assetBizUser.getBizId(), assetBizUser.getUserCode(),assetBizUser.getReadTime());
		} else {			
			assetBizUserMapper.insertSelective(assetBizUser);
		}
	}
	
	/**
	 * 
	 * <p>函数名称： setIndexNoticeConfig       </p>
	 * <p>功能说明：设置首页弹窗信息
	 *
	 * </p>
	 *<p>参数说明：</p>
	 * @return
	 *
	 * @date   创建时间：2017年8月13日
	 * @author 作者：xds
	 */
	public Map<String,Object> setIndexNoticeConfig(){
		Map<String,Object> result = new HashMap<String, Object>();
		
		return result;
	}

	@Override
	public Map<String, Object> batchDeleteByBizId(String bizType, List<String> bizIds) {
		Map<String,Object> result = new HashMap<String, Object>();
		assetBizUserMapper.batchDeleteByBizId(bizType, bizIds);
		result.put("tag", true);
		result.put("msg", "弹窗查看记录删除成功");
		return result;
		
	}


}