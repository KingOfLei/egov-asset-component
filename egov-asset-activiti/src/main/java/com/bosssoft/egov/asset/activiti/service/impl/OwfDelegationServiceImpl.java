package com.bosssoft.egov.asset.activiti.service.impl;

/**
 * 福建博思软件 1997-2016 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Tue Nov 15 10:46:24 CST 2016
 */

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.asset.activiti.entity.OwfDelegation;
import com.bosssoft.egov.asset.activiti.mapper.OwfDelegationMapper;
import com.bosssoft.egov.asset.activiti.service.OwfDelegationService;
import com.bosssoft.egov.asset.drc.DrcHepler;
import com.bosssoft.platform.appframe.api.entity.ApiUser;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;

/**
 * 类说明: OwfDelegationService接口实现类.
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2016-11-15   jinbiao　　　新建
 * </pre>
 */
@Service
@SuppressWarnings("unused")
public class OwfDelegationServiceImpl implements OwfDelegationService {

	private static Logger logger = LoggerFactory.getLogger(OwfDelegationServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private OwfDelegationMapper owfDelegationMapper;

	/**
	 *
	 * @param owfDelegation
	 */
	public void addOwfDelegation(OwfDelegation owfDelegation) {
		owfDelegationMapper.insert(owfDelegation);
	}

	/**
	 *
	 * @param owfDelegation
	 */
	public void delOwfDelegation(OwfDelegation owfDelegation) {
		owfDelegationMapper.deleteByPrimaryKey(owfDelegation);
	}

	public void batchDelOwfDelegation(List<OwfDelegation> owfDelegations) {
		if (owfDelegations != null && owfDelegations.size() > 0) {
			for (OwfDelegation owfDelegation2 : owfDelegations) {
				owfDelegationMapper.deleteByPrimaryKey(owfDelegation2);
			}
		}
	}

	/**
	 *
	 * @param owfDelegation
	 */
	public void updateOwfDelegation(OwfDelegation owfDelegation) {
		owfDelegationMapper.updateByPrimaryKey(owfDelegation);
	}

	/**
	 *
	 * @param owfDelegation
	 * @retrun
	 */
	public List<OwfDelegation> getOwfDelegationList(OwfDelegation owfDelegation) {
		return null;
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<OwfDelegation> queryOwfDelegationPage(Searcher searcher, Page<OwfDelegation> page) {
		return owfDelegationMapper.queryOwfDelegationPage(searcher, page);
	}

	/**
	 * 
	 * <p>
	 * 函数名称：
	 * </p>
	 * <p>
	 * 功能说明：根据用户查询代理情况
	 *
	 * </p>
	 * <p>
	 * 参数说明：
	 * </p>
	 * 
	 * @param searcher
	 * @param page
	 * @param name
	 * @return
	 *
	 * @date 创建时间：2016年11月15日
	 * @author 作者：jinbiao
	 */
	public Page<OwfDelegation> queryOwfDelegationPageByUserCodeOne(Searcher searcher, Page<OwfDelegation> page, String userCode) {
		return owfDelegationMapper.queryOwfDelegationPageByUserCode(searcher, page, userCode);
	}

	// 返回带有名字的
	public List<OwfDelegation> queryOwfDelegationPageByUserCode(Searcher searcher, Page<OwfDelegation> page, String userCode) {
		List<OwfDelegation> list = owfDelegationMapper.queryOwfDelegationPageByUserCode(searcher, page, userCode);
		if (list != null && list.size() > 0) {
			for (int i = 0, len = list.size(); i < len; i++) {
				ApiUser delegate = DrcHepler.getInstance().findUseriInfoByUserCode(list.get(i).getDelegate());
				ApiUser delegated = DrcHepler.getInstance().findUseriInfoByUserCode(list.get(i).getDelegated());
				if (delegate != null) {
					list.get(i).setDelegateName(delegate.getUserName());
				}
				if (delegated != null) {
					list.get(i).setDelegatedName(delegated.getUserName());
				}
			}
		}
		return list;
	}

	/**
	 *
	 * @param owfDelegation
	 */
	public void addOwfDelegationNoId(OwfDelegation owfDelegation) {
		owfDelegationMapper.insertSelective(owfDelegation);
	}

}