package com.bosssoft.egov.asset.activiti.service.impl;

/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Sat Jan 07 11:34:44 CST 2017
 */

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.asset.activiti.entity.AssetBusHistory;
import com.bosssoft.egov.asset.activiti.mapper.AssetBusHistoryMapper;
import com.bosssoft.egov.asset.activiti.service.AssetBusHistoryService;
import com.bosssoft.egov.asset.common.util.StringUtilsExt;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;

/**
 * 类说明: AssetBusHistoryService接口实现类.
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017-01-07   jinbiao　　　新建
 * </pre>
 */
@Service
public class AssetBusHistoryServiceImpl implements AssetBusHistoryService {

	private static Logger logger = LoggerFactory.getLogger(AssetBusHistoryServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private AssetBusHistoryMapper assetBusHistoryMapper;

	/**
	 *
	 * @param assetBusHistory
	 */
	public void addAssetBusHistory(AssetBusHistory assetBusHistory) {
		assetBusHistoryMapper.insert(assetBusHistory);
	}

	/**
	 *
	 * @param assetBusHistory
	 */
	public void delAssetBusHistory(AssetBusHistory assetBusHistory) {
		assetBusHistoryMapper.deleteByPrimaryKey(assetBusHistory);
	}

	/**
	 *
	 * @param assetBusHistory
	 */
	public void updateAssetBusHistory(AssetBusHistory assetBusHistory) {
		assetBusHistoryMapper.updateByPrimaryKey(assetBusHistory);
	}

	/**
	 *
	 * @param assetBusHistory
	 * @retrun
	 */
	public List<AssetBusHistory> getAssetBusHistoryList(AssetBusHistory assetBusHistory) {
		return null;
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<AssetBusHistory> queryAssetBusHistoryPage(Searcher searcher, Page<AssetBusHistory> page) {
		return null;
	}

	public int deleteByBusIdAndPId(String busId, String pId) {
		return assetBusHistoryMapper.deleteByBusIdAndPId(busId, pId);
	}

	/**
	 * 根据busId修复表
	 */
	public int updatePIdByBusId(String busId, String pId,String busType) {
		return assetBusHistoryMapper.updatePIdByBusId(busId, pId, busType);
	}
	public int updatePIdByBusIdAndBusType(String busId, String pId,String busType) {
		return assetBusHistoryMapper.updatePIdByBusIdAndBusType(busId, pId, busType);
	}
	public int updateBusTypeByBusIdAndPid(String busId, String pId,String busType) {
		return assetBusHistoryMapper.updateBusTypeByBusIdAndPid(busId, pId, busType);
	}

	public int deleteByBusIdUserCode(AssetBusHistory assetBusHistory) {
		return assetBusHistoryMapper.deleteByBusIdUserCode(assetBusHistory.getBusId(), assetBusHistory.getOperatorId());
	}

	public int deleteByBusIdUserCodeUserTask(AssetBusHistory assetBusHistory) {
		return assetBusHistoryMapper.deleteByBusIdUserCodeCurrentTask(assetBusHistory.getBusId(), assetBusHistory.getOperatorId(), assetBusHistory.getCurrentTask());
	}

	public void updateHistoryLog(AssetBusHistory history, Integer handle) {
		AssetBusHistory record = new AssetBusHistory();
		record.setBusId(history.getBusId());
		record.setOperatorId(history.getOperatorId());
		record.setCurrentTask(history.getCurrentTask());
		AssetBusHistory oldHistory = this.queryOneHistory(record);
		// 删除存在记录
		this.deleteByBusIdUserCodeUserTask(record);
		if (oldHistory != null) {
			if (handle == null) {
				history.setBeforCheck(oldHistory.getCheckResult());
				history.setBeforeTask(oldHistory.getCurrentTask());
				history.setBeforeStatus(oldHistory.getTaskStatus());
			} else {// 如果是取消的话，将上次所有的操作复制过来，审核的话，保留记录，但是可能记录会有点多余
				history.setCheckResult(oldHistory.getBeforeCheck());
				history.setCurrentTask(oldHistory.getBeforeTask());
				history.setTaskStatus(oldHistory.getBeforeStatus());
				// history.setBeforCheck(oldHistory.getBeforeCheck());
				// history.setBeforeTask(oldHistory.getBeforeTask());
				// history.setBeforeStatus(oldHistory.getBeforeStatus());
			}
		}
		if (history.getCheckResult() != null) {
			// 保留最新记录
			this.addAssetBusHistory(history);
		}
	}

	public AssetBusHistory queryOne(AssetBusHistory record) {
		return assetBusHistoryMapper.queryOne(record.getBusId(), record.getOperatorId());
	}

	public AssetBusHistory queryOneHistory(AssetBusHistory record) {
		return assetBusHistoryMapper.queryOneHistory(record.getBusId(), record.getOperatorId(), record.getCurrentTask());
	}

	public List<AssetBusHistory> queryCheckList(AssetBusHistory record) {
		return assetBusHistoryMapper.queryCheckList(record.getBusId(), record.getOperatorId(), StringUtilsExt.convertNullToString(record.getCheckResult()));
	}

	public List<AssetBusHistory> queryCheckListByBusinessId(String busId) {
		return assetBusHistoryMapper.queryCheckListByBusinessId(busId);
	}

	public List<AssetBusHistory> queryCheckListByBusinessIdUserCode(String businessId, String userCode) {
		return assetBusHistoryMapper.queryCheckListByBusinessIdUserCode(businessId, userCode);
	}

}