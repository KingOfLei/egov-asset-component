package com.bosssoft.egov.asset.activiti.service.impl;

/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * Tue Mar 14 01:42:32 CST 2017
 */

import java.util.List;

import com.bosssoft.egov.asset.activiti.ActivitiIdGen;
import com.bosssoft.egov.asset.activiti.entity.ActivitiBranchControl;
import com.bosssoft.platform.common.lang.data.Page;
import com.bosssoft.platform.common.lang.data.Searcher;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bosssoft.egov.asset.activiti.service.ActivitiBranchControlService;
import com.bosssoft.egov.asset.activiti.mapper.ActivitiBranchControlMapper;


/**
 * 类说明: ActivitiBranchControlService接口实现类. 
 *
 * 类用途：
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017-03-14   jinbiao　　　新建
 * </pre>
 */
@Service
public class ActivitiBranchControlServiceImpl implements ActivitiBranchControlService {

	private static Logger logger = LoggerFactory.getLogger(ActivitiBranchControlServiceImpl.class);

	// TODO 添加需要的Mapper
	@Autowired
	private ActivitiBranchControlMapper activitiBranchControlMapper;
	
	/**
	 *
	 * @param activitiBranchControl
	 */
	public void addActivitiBranchControl(ActivitiBranchControl activitiBranchControl)  {
		activitiBranchControl.setId(ActivitiIdGen.newWKID());
		activitiBranchControlMapper.insert(activitiBranchControl);
	}

	/**
	 *
	 * @param activitiBranchControl
	 */
	public void delActivitiBranchControl(ActivitiBranchControl activitiBranchControl)  {
		activitiBranchControlMapper.deleteByPrimaryKey(activitiBranchControl);
	}

	/**
	 *
	 * @param activitiBranchControl
	 */
	public void updateActivitiBranchControl(ActivitiBranchControl activitiBranchControl)  {
		activitiBranchControlMapper.updateByPrimaryKey(activitiBranchControl);
	}

	/**
	 *
	 * @param activitiBranchControl
	 * @retrun
	 */
	public List<ActivitiBranchControl> getActivitiBranchControlList(ActivitiBranchControl activitiBranchControl)  {
		return activitiBranchControlMapper.select(activitiBranchControl);
	}

	/**
	 *
	 * @param searcher
	 * @param page
	 * @retrun
	 */
	public Page<ActivitiBranchControl> queryActivitiBranchControlPage(Searcher searcher, Page<ActivitiBranchControl> page)  {
		return activitiBranchControlMapper.queryActivitiBranchControlPage(searcher, page);
	}


}