/*******************************************************************************
 * 福建博思软件1997-2017 版权所有
 * 
 * Auto generated by Bosssoft Studio version 1.0 beta
 * 2017年12月29日上午10:19:10
 *******************************************************************************/
package com.bosssoft.egov.asset.ext.cache;

import java.text.MessageFormat;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import com.bosssoft.egov.asset.common.util.DateUtilsExt;
import com.bosssoft.egov.asset.ext.entity.AssetGridQueryHistory;
import com.bosssoft.egov.asset.ext.utils.AssetGridExtCacheUtil;
import com.bosssoft.egov.asset.ext.utils.IdManagerUtil;
import com.bosssoft.platform.cache.CacheConfigParser;
import com.bosssoft.platform.cache.CacheFactory;
import com.bosssoft.platform.cache.api.Cache;
import com.bosssoft.platform.cache.api.CacheProperty;

/**
 * @ClassName	类名：AssetGridQueryHistoryCacheManager.java
 * @Description	功能说明：网格查询历史记录缓存管理
 * <pre>
 * @date		创建日期：2017年12月29日
 * @author		创建人：chenzhibin
 * @version		版本号：V1.0
 * <pre>
 *-------------------修订记录---------------------
 */
public class AssetGridQueryHistoryCacheManager {

	private static final String CACHE_NAME = "EgovAssetGridQueryHistoryCache";
	
	private static final String QUERY_PATTERN = "GRID_QUERY_CACHE::{0}::{1}::{2}";
	
	private static AssetGridQueryHistoryCacheManager instance;
	
	private TreeMap<String, Cache> historyCaches = new TreeMap<String, Cache>(
		new Comparator<String>() {
			public int compare(String o1, String o2) {
				return o1.compareTo(o2);
			}
		});
	
	/**
	 * <p>功能说明：获取单例对象
	 * </p>
	 * <p>参数说明：
	 * @return
	 * </p>
	 *
	 * @date	创建时间：2017年12月29日
	 * @author	作者：chenzhibin
	 */
	public static AssetGridQueryHistoryCacheManager getInstance(){
		if(instance == null){
			instance = new AssetGridQueryHistoryCacheManager();
		}
		return instance;
	}
	
	private AssetGridQueryHistoryCacheManager(){
		String[] cacheNames = CacheConfigParser.getInstance().getCacheNames();
		for(String cacheName : cacheNames){
			if(cacheName.equals(CACHE_NAME)){
				Cache cache = CacheFactory.getInstance().findCache(cacheName);
				CacheProperty cacheConfig = cache.getCacheConfig();
				historyCaches.put(cacheConfig.getPriority() + cacheName, cache);
			}
		}
	}

	/**
	 * <p>功能说明：清空网格历史查询记录<br>
	 * 根据userCode、gridId、bizType清除数据库与缓存数据
	 * </p>
	 * <p>参数说明：
	 * @param history
	 * @param clearAll 是否全部清空
	 * </p>
	 *
	 * @date	创建时间：2017年12月29日
	 * @author	作者：chenzhibin
	 */
	public void clear(AssetGridQueryHistory history, boolean clearAll) {
		for(Map.Entry<String, Cache> cache : historyCaches.entrySet()){
			if(history != null){
				if(clearAll){
					cache.getValue().remove(buildKey(history));
				} else{
					cache.getValue().remove(history);
				}
			}
		}
	}

	/**
	 * <p>功能说明：获取历史查询记录<br>
	 * 根据userCode、gridId、bizType获取当前网格历史查询记录
	 * </p>
	 * <p>参数说明：
	 * @param history
	 * @return
	 * </p>
	 *
	 * @date	创建时间：2018年1月5日
	 * @author	作者：chenzhibin
	 */
	@SuppressWarnings("unchecked")
	public AssetGridExtCacheUtil<AssetGridQueryHistory> get(AssetGridQueryHistory history) {
		for(Map.Entry<String, Cache> cache : historyCaches.entrySet()){
			return (AssetGridExtCacheUtil<AssetGridQueryHistory>) cache.getValue().get(buildKey(history));
		}
		return null;
	}

	/**
	 * <p>功能说明：保存历史查询记录<br>
	 * 根据userCode、gridId、bizType新增或更新当前网格历史查询记录
	 * </p>
	 * <p>参数说明：
	 * @param history
	 * @param type 操作类型，ADD：新增、UPDATE：更新
	 * @param count 历史查询记录最多保存个数
	 * </p>
	 *
	 * @date	创建时间：2018年1月5日
	 * @author	作者：chenzhibin
	 */
	public AssetGridQueryHistory put(AssetGridQueryHistory history, int count) {
		AssetGridExtCacheUtil<AssetGridQueryHistory> extUtil = get(history);
		
		history.setEndTime(DateUtilsExt.getNowDateTime());
		extUtil.setType(history.getQueryId() == null ? "ADD" : "UPDATE");
		List<AssetGridQueryHistory> listObj = extUtil.getListObj();
		
		Long queryId = history.getQueryId();
		if(queryId == null){
			history.setCreateTime(DateUtilsExt.getNowDateTime());
			history.setQueryId(IdManagerUtil.getInstance().newId());
			// 超过最多查询记录个数就删除最后一个
			if(listObj.size() >= count){
				AssetGridQueryHistory removeHistory = listObj.remove(listObj.size() - 1);
				clear(removeHistory, false);
			}
			
			listObj.add(0, history);
		} else{
			for(int i = 0; i < listObj.size(); i++){
				AssetGridQueryHistory obj = listObj.get(i);
				if(history.equals(obj)){
					listObj.remove(i);
					listObj.add(0, history);
					break;
				}
			}
		}
		extUtil.setOper(history);
		extUtil.setListObj(listObj);
		
		for(Map.Entry<String, Cache> cache : historyCaches.entrySet()){
			cache.getValue().put(buildKey(history), extUtil);
		}
		
		return history;
	}

	/**
	 * <p>功能说明：包装缓存key值 GRID_QUERY_CACHE::userCode::gridId::bizType
	 * </p>
	 * <p>参数说明：
	 * @param history
	 * @return
	 * </p>
	 *
	 * @date	创建时间：2017年12月29日
	 * @author	作者：chenzhibin
	 */
	private String buildKey(AssetGridQueryHistory history){
		return MessageFormat.format(QUERY_PATTERN, history.getUserCode(), history.getGridId(), history.getBizType());
	}
}
