/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * 2017年11月6日 下午6:53:12
 */
package com.bosssoft.egov.asset.ext.cache.cacheloader;

import java.io.Serializable;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;

import com.bosssoft.egov.asset.common.util.DateUtilsExt;
import com.bosssoft.egov.asset.ext.entity.AssetGridCfg;
import com.bosssoft.egov.asset.ext.mapper.AssetGridCfgMapper;
import com.bosssoft.egov.asset.ext.mapper.AssetGridColCfgMapper;
import com.bosssoft.egov.asset.ext.utils.AssetGridExtCacheUtil;
import com.bosssoft.platform.cache.api.Cache;
import com.bosssoft.platform.cache.api.CacheLoader;

/**
 * 类说明: 网格配置缓存加载器<br>
 * <p>
 * 将所有网格配置加载到缓存中，根据当前用户编码作为key获取缓存数据
 * </p>
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017年11月6日  chenzhibin  新建
 * </pre>
 */
public class AssetGridCacheloader implements CacheLoader {
	@Resource
	private AssetGridCfgMapper gridCfgMapper;
	
	@Resource
	private AssetGridColCfgMapper gridColCfgMapper;
	
	@Override
	public Map<Serializable, Serializable> preLoad(Cache cache) {
		return null;
	}

	@Override
	public Serializable get(Serializable key) {
		String lookupkey = (String) key;
		String[] keys = lookupkey.split("::");
		
		AssetGridExtCacheUtil<AssetGridCfg> template = new AssetGridExtCacheUtil<AssetGridCfg>(keys[1], keys[2], keys[3]);
		AssetGridCfg grid = new AssetGridCfg(keys[1], keys[2], keys[3]);
		
		List<AssetGridCfg> gridList = gridCfgMapper.getGridCfgByUserGrid(grid);
		
		if(gridList != null && gridList.size() > 0){
			for(AssetGridCfg gr : gridList){
				gr.setColumns(gridColCfgMapper.getGridColCfgByGridCfgId(gr.getCfgId()));
				// 设置当前使用的模板
				if("1".equals(gr.getUseStatus())){
					template.setOper(gr);
				}
			}
		} else{
			gridList = new ArrayList<AssetGridCfg>();
			template.setOper(grid);
		}
		template.setListObj(gridList);
		
		return template;
	}

	@Override
	@SuppressWarnings("unchecked")
	public void put(Serializable key, Serializable value) {
		AssetGridExtCacheUtil<AssetGridCfg> template = (AssetGridExtCacheUtil<AssetGridCfg>) value;
		
		// 当前操作模板
		AssetGridCfg oper = template.getOper();
		oper.setEndTime(DateUtilsExt.getNowDateTime());
		
		// 将该用户相应网格配置使用状态重置为0
		gridCfgMapper.resetUseStatus(oper);
		
		if(!oper.getCfgId().equals(-1L)){
			if("ADD".equalsIgnoreCase(template.getType())){
				if(StringUtils.isBlank(oper.getCfgName())){
					SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
					oper.setCfgName("模板" + sdf.format(new Date()));
				}
				gridCfgMapper.insertSelective(oper);
			} else{
				gridCfgMapper.updateByPrimaryKeySelective(oper);
				gridColCfgMapper.deleteGridColCfgByGridCfgId(oper.getCfgId());
			}
			
			// 保存列配置
			gridColCfgMapper.insertColumnsCfg(oper.getColumns());
		}
	}

	@Override
	public Serializable remove(Serializable key) {
		AssetGridCfg grid = null;
		if(key instanceof AssetGridCfg){
			grid = (AssetGridCfg) key;
			// 删除网格配置
			gridCfgMapper.deleteByPrimaryKey(grid);
			// 清空网格列配置
			gridColCfgMapper.deleteGridColCfgByGridCfgId(grid.getCfgId());
		}
		
		return grid;
	}
}
