/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * 2017年10月25日 下午4:50:46
 */
package com.bosssoft.egov.asset.ext.web;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.bosssoft.egov.asset.ext.entity.AssetGridCfg;
import com.bosssoft.egov.asset.ext.entity.AssetGridColCfg;
import com.bosssoft.egov.asset.ext.service.AssetGridCfgService;
import com.bosssoft.egov.asset.ext.service.AssetGridColCfgService;
import com.bosssoft.egov.asset.ext.utils.AssetGridExtCacheUtil;
import com.bosssoft.platform.runtime.spi.User;
import com.bosssoft.platform.runtime.web.context.WebApplicationContext;
import com.bosssoft.platform.runtime.web.response.AjaxResult;

/**
 * 类说明: 自定义网格配置controller层
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017年10月25日  chenzhibin  新建
 * </pre>
 */
@Controller
@RequestMapping(value="ext/grid")
public class AssetGridCfgController {
	@Autowired
	private AssetGridCfgService gridCfgService;
	
	@Autowired
	private AssetGridColCfgService gridColCfgService;
	
	/**
	 * 根据当前用户获取对应业务网格配置信息
	 */
	@ResponseBody
	@RequestMapping(value="getGridCfg.do", name="获取当前用户对应业务所有网格配置")
	public AssetGridExtCacheUtil<AssetGridCfg> getGridCfg(AssetGridCfg gr){
		User user = WebApplicationContext.getContext().getCurrentUser();
		gr.setUserCode(user.getUserCode());
		
		return gridCfgService.getGridCfgByUser(gr);
	}
	
	@ResponseBody
	@RequestMapping(value="getGridCfgList.do", name="下拉信息获取网格配置")
	public List<AssetGridCfg> getGridCfgList(AssetGridCfg gr){
		User user = WebApplicationContext.getContext().getCurrentUser();
		gr.setUserCode(user.getUserCode());
		
		AssetGridExtCacheUtil<AssetGridCfg> template = gridCfgService.getGridCfgByUser(gr);
		List<AssetGridCfg> gridList = template.getListObj();
		if(gridList == null){
			gridList = new ArrayList<AssetGridCfg>();
		}
		AssetGridCfg grid = new AssetGridCfg();
		grid.setCfgId(-1L);
		grid.setCfgName("默认配置");
		gridList.add(0, grid);
		
		return gridList;
	}
	
	/**
	 * 根据当前用户信息保存网格配置
	 * @param gr
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value="doCommit.do", name="保存网格配置", method=RequestMethod.POST)
	public AjaxResult doCommit(List<AssetGridColCfg> columns, Long cfgId, String cfgName, String gridId, String bizType, 
			String bizTypeName, Integer levelCount, String attr, String type){
		User user = WebApplicationContext.getContext().getCurrentUser();
		AssetGridCfg grid = new AssetGridCfg(cfgId, cfgName, user.getUserCode(), gridId, bizType, bizTypeName, levelCount);
		grid.setColumns(columns);
		grid.setAttr(attr);
		
		return gridCfgService.saveGridCfg(grid, type);
	}
	
	@ResponseBody
	@RequestMapping(value="deleteGridCfg.do", name="删除网格配置", method=RequestMethod.POST)
	public AjaxResult deleteGridCfg(AssetGridCfg grid){
		User user = WebApplicationContext.getContext().getCurrentUser();
		grid.setUserCode(user.getUserCode());
		return gridCfgService.deleteGridCfg(grid);
	}
	
}
