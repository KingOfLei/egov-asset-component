/*******************************************************************************
 * 福建博思软件1997-2017 版权所有
 * 
 * Auto generated by Bosssoft Studio version 1.0 beta
 * 2018年1月26日下午4:16:32
 *******************************************************************************/
package com.bosssoft.egov.asset.skin.service.impl;

import org.springframework.stereotype.Service;

import com.bosssoft.egov.asset.common.util.DateUtilsExt;
import com.bosssoft.egov.asset.common.util.StringUtilsExt;
import com.bosssoft.egov.asset.ext.utils.IdManagerUtil;
import com.bosssoft.egov.asset.skin.cache.AssetSkinCacheManager;
import com.bosssoft.egov.asset.skin.entiry.AssetSkinCfg;
import com.bosssoft.egov.asset.skin.service.AssetSkinCfgService;
import com.bosssoft.platform.runtime.spi.User;
import com.bosssoft.platform.runtime.web.context.WebApplicationContext;
import com.bosssoft.platform.runtime.web.response.AjaxResult;

/**
 * @ClassName	类名：AssetSkinCfgServiceImpl.java
 * @Description	功能说明：皮肤配置service接口实现类
 * <pre>
 * @date		创建日期：2018年1月26日
 * @author		创建人：chenzhibin
 * @version		版本号：V1.0
 * <pre>
 *-------------------修订记录---------------------
 */
@Service
public class AssetSkinCfgServiceImpl implements AssetSkinCfgService {

	@Override
	public synchronized AjaxResult addSkinCfg(AssetSkinCfg skin) {
		User user = WebApplicationContext.getContext().getCurrentUser();
		AjaxResult result = new AjaxResult(AjaxResult.STATUS_ERROR, "error");
		
		// 1.验证配置是否合法
		if(skin == null){
			result.setMessage("配置不存在！");
			return result;
		}
		skin.setUserCode(user.getUserCode());
		
		if(StringUtilsExt.isBlank(skin.getSkinName()) || StringUtilsExt.isBlank(skin.getSkinPath())){
			result.setMessage("皮肤配置不能为空！");
			return result;
		}
		
		// 2.删除原有配置
		AssetSkinCacheManager.getInstance().removeSkinCfg(skin);
		
		// 3.添加新的配置
		skin.setCreatedate(DateUtilsExt.getNowDateTime());
		skin.setSkinId(IdManagerUtil.getInstance().newId());
		AssetSkinCacheManager.getInstance().putSkinCfg(skin);
		
		// 成功返回数据
		result.setStatusCode(AjaxResult.STATUS_SUCCESS);
		result.setMessage("success");
		result.setData(skin);
		
		return result;
	}

	@Override
	public synchronized AssetSkinCfg getSkinCfg() {
		User user = WebApplicationContext.getContext().getCurrentUser();
		AssetSkinCfg skin = new AssetSkinCfg();
		skin.setUserCode(user.getUserCode());
		
		// 获取配置信息
		return AssetSkinCacheManager.getInstance().getSkinCfg(skin);
	}

}
