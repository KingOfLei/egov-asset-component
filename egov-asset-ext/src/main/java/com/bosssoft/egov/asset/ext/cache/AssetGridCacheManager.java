/**
 * 福建博思软件 1997-2017 版权所有
 * Auto generated by Bosssoft Studio version 1.0 beta
 * 2017年11月6日 上午11:34:14
 */
package com.bosssoft.egov.asset.ext.cache;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import com.bosssoft.egov.asset.ext.entity.AssetGridCfg;
import com.bosssoft.egov.asset.ext.entity.AssetGridColCfg;
import com.bosssoft.egov.asset.ext.utils.AssetGridExtCacheUtil;
import com.bosssoft.egov.asset.ext.utils.IdManagerUtil;
import com.bosssoft.platform.cache.CacheConfigParser;
import com.bosssoft.platform.cache.CacheFactory;
import com.bosssoft.platform.cache.api.Cache;
import com.bosssoft.platform.cache.api.CacheProperty;

/**
 * 类说明: 网格配置信息缓存管理器
 *
 * <pre>
 * 修改记录：
 * 修改日期　　　修改人　　　修改原因
 * 2017年11月6日  chenzhibin  新建
 * </pre>
 */
public class AssetGridCacheManager {
	
	private static final String CACHE_NAME = "EgovAssetGridCache";
	
	private static final String GRID_PATTERN = "GRID_CACHE::{0}::{1}::{2}";
	
	private static AssetGridCacheManager INSTANCE;
	
	private TreeMap<String, Cache> gridCaches = new TreeMap<String, Cache>(
			new Comparator<String>() {
				public int compare(String o1, String o2) {
					return o1.compareTo(o2);
				}
			});
	
	public static synchronized AssetGridCacheManager getInstance(){
		if(INSTANCE == null){
			INSTANCE = new AssetGridCacheManager();
		}
		return INSTANCE;
	}
	
	private AssetGridCacheManager(){
		String[] cacheNames = CacheConfigParser.getInstance().getCacheNames();
		for(String cacheName : cacheNames){
			if(cacheName.equals(CACHE_NAME)){
				Cache cache = CacheFactory.getInstance().findCache(cacheName);
				CacheProperty cacheConfig = cache.getCacheConfig();
				gridCaches.put(cacheConfig.getPriority() + cacheName, cache);
			}
		}
	}
	
	/**
	 * 
	 * <p>功能说明：清除缓存<br>
	 * 根据userCode、gridId、bizType清除网格配置
	 * </p>
	 * <p>参数说明：
	 * @param grid
	 * </p>
	 *
	 * @date	创建时间：2018年1月5日
	 * @author	作者：chenzhibin
	 */
	public void removeGridCache(AssetGridCfg grid){
		// 清除缓存
		for(Map.Entry<String, Cache> cache : gridCaches.entrySet()){
			// 删除缓存
			cache.getValue().remove(buildkey(grid));
			// 删除数据库数据
			cache.getValue().remove(grid);
		}
	}
	
	/**
	 * <p>功能说明：清除缓存配置
	 * </p>
	 * <p>参数说明：
	 * @param grid 为空清除所有缓存，不为空清除对应网格配置缓存
	 * </p>
	 *
	 * @date	创建时间：2017年12月20日
	 * @author	作者：chenzhibin
	 */
	public void cleanGridCache(AssetGridCfg grid){
		for(Map.Entry<String, Cache> cache : gridCaches.entrySet()){
			if(grid != null){
				cache.getValue().remove(buildkey(grid));
				break;
			} else{
				cache.getValue().clear();
			}
		}
	}
	
	/**
	 * <p>功能说明：获取用户当前网格所有配置信息<br>
	 * 根据userCode、gridId、bizType获取网格配置
	 * </p>
	 * <p>参数说明：
	 * @param grid
	 * @return
	 * </p>
	 *
	 * @date	创建时间：2018年1月5日
	 * @author	作者：chenzhibin
	 */
	@SuppressWarnings("unchecked")
	public AssetGridExtCacheUtil<AssetGridCfg> getGridCfg(AssetGridCfg grid){
		for(Map.Entry<String, Cache> cache : gridCaches.entrySet()){
			return (AssetGridExtCacheUtil<AssetGridCfg>) cache.getValue().get(buildkey(grid));
		}
		return null;
	}
	
	/**
	 * <p>功能说明：添加或更新数据到缓存
	 * </p>
	 * <p>参数说明：
	 * @param grid
	 * @param type 操作类型，ADD：新增、UPDATE：更新
	 * @return
	 * </p>
	 *
	 * @date	创建时间：2018年1月5日
	 * @author	作者：chenzhibin
	 */
	public AssetGridCfg putGridCfg(AssetGridCfg grid, String type){
		// 获取当前用户该网格的所有配置
		AssetGridExtCacheUtil<AssetGridCfg> template = getGridCfg(grid);
		template.setType(type);
		List<AssetGridCfg> gridList = template.getListObj();
		if(gridList == null){
			gridList = new ArrayList<AssetGridCfg>();
		}
		
		Long cfgId = grid.getCfgId() == null ? IdManagerUtil.getInstance().newId() : grid.getCfgId();
		grid.setUseStatus("1");
		List<AssetGridColCfg> columns = grid.getColumns();
		for(AssetGridColCfg column : columns){
			column.setCfgId(IdManagerUtil.getInstance().newId());
			column.setGridCfgId(cfgId);
		}
		
		// 替换缓存中的网格配置
		if(grid.getCfgId() != null){
			for(int i = 0; i < gridList.size(); i++){
				AssetGridCfg gr = gridList.get(i);
				if(gr.equals(grid)){
					gridList.remove(i);
					gridList.add(i, grid);
				}
				gr.setUseStatus("0");
			}
		} else{
			grid.setCfgId(cfgId);
			gridList.add(0, grid);
		}
		
		template.setListObj(gridList);
		template.setOper(grid);
		
		// 添加配置并更新缓存
		for(Map.Entry<String, Cache> cache : gridCaches.entrySet()){
			cache.getValue().put(buildkey(grid), template);
		}
		
		return grid;
	}
	
	/**
	 * <p>功能说明：包装缓存key值 GRID_CACHE::userCode::gridId::bizType
	 * </p>
	 * <p>参数说明：
	 * @param grid
	 * @return
	 * </p>
	 *
	 * @date	创建时间：2018年1月5日
	 * @author	作者：chenzhibin
	 */
	private String buildkey(AssetGridCfg grid){
		return MessageFormat.format(GRID_PATTERN, grid.getUserCode(), grid.getGridId(), grid.getBizType());
	}
	
}
