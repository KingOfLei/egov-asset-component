/*******************************************************************************
 * 福建博思软件1997-2017 版权所有
 * 
 * Auto generated by Bosssoft Studio version 1.0 beta
 * 2017年12月29日上午10:20:09
 *******************************************************************************/
package com.bosssoft.egov.asset.ext.cache.cacheloader;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.bosssoft.egov.asset.ext.entity.AssetGridQueryHistory;
import com.bosssoft.egov.asset.ext.mapper.AssetGridQueryHistoryMapper;
import com.bosssoft.egov.asset.ext.utils.AssetGridExtCacheUtil;
import com.bosssoft.platform.cache.api.Cache;
import com.bosssoft.platform.cache.api.CacheLoader;

/**
 * @ClassName	类名：AssetGridQueryHistoryCacheloader.java
 * @Description	功能说明：网格查询历史记录缓存加载器
 * <pre>
 * @date		创建日期：2017年12月29日
 * @author		创建人：chenzhibin
 * @version		版本号：V1.0
 * <pre>
 *-------------------修订记录---------------------
 */
public class AssetGridQueryHistoryCacheloader implements CacheLoader {

	@Resource
	private AssetGridQueryHistoryMapper historyMapper;
	
	@Override
	public Map<Serializable, Serializable> preLoad(Cache cache) {
		return null;
	}

	@Override
	public Serializable get(Serializable key) {
		String lookupkey = (String) key;
		String[] keys = lookupkey.split("::");
		
		AssetGridQueryHistory history = new AssetGridQueryHistory(keys[1], keys[2], keys[3]);
		AssetGridExtCacheUtil<AssetGridQueryHistory> extUtil = new AssetGridExtCacheUtil<AssetGridQueryHistory>(keys[0], keys[1], keys[2]);
		List<AssetGridQueryHistory> historyList = historyMapper.getQueryHistory(history);
		if(historyList == null){
			historyList = new ArrayList<AssetGridQueryHistory>();
		}
		
		extUtil.setListObj(historyList);
		
		return extUtil;
	}

	@Override
	@SuppressWarnings("unchecked")
	public void put(Serializable key, Serializable value) {
		AssetGridExtCacheUtil<AssetGridQueryHistory> extUtil = (AssetGridExtCacheUtil<AssetGridQueryHistory>) value;

		AssetGridQueryHistory history = extUtil.getOper();
		if("UPDATE".equalsIgnoreCase(extUtil.getType())){
			historyMapper.updateByPrimaryKeySelective(history);
		} else{
			historyMapper.insertSelective(history);
		}
	}

	@Override
	public Serializable remove(Serializable key) {
		AssetGridQueryHistory history = null;
		if(key instanceof AssetGridQueryHistory){
			history = (AssetGridQueryHistory) key;
			historyMapper.deleteByPrimaryKey(history);
		} else{
			String lookupkey = (String) key;
			String[] keys = lookupkey.split("::");
			
			history = new AssetGridQueryHistory(keys[1], keys[2], keys[3]);
			historyMapper.removeQueryHistory(history);
		}
		
		return history;
	}

}
